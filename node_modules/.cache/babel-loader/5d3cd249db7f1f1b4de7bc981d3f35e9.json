{"remainingRequest":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/babel-loader/lib/index.js!/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/eslint-loader/index.js??ref--13-0!/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/src/store/modules/articles.js","dependencies":[{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/src/store/modules/articles.js","mtime":1619331175815},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/cache-loader/dist/cjs.js","mtime":1618025539709},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/babel-loader/lib/index.js","mtime":1618025539271},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/eslint-loader/index.js","mtime":1618025559964}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/src/store/modules/articles.js"],"names":["vuexfireMutations","firestoreAction","getField","updateField","db","resourcesRef","collection","namespaced","state","articles","articleID","currentArticle","topicID","parentType","parentID","resourceType","newsSource","published","title","url","summary","thumbURL","thumbFile","searchArray","getters","currentArticles","actions","bindTopics","bindFirestoreRef","fetchArticles","commit","rootState","articleList","where","topics","get","then","querySnapshot","docs","map","doc","articleItem","data","push","id","console","log","fetchContentArticles","readParentID","events","eventId","people","personId","contentArticles","submitNewArticle","dispatch","add","alert","editArticle","article","index","findIndex","e","submitEditArticle","set","merge","deleteArticle","delete","clearArticleForm","mutations","SET_ARTICLES","SET_ARTICLE_ID","SET_CURRENT_ARTICLE_RESOURCE","SET_ARTICLE_TOPIC_ID","SET_SEARCH_ARRAY","array","newArray","split","SET_ARTICLE_PROPS","props","UPDATE_SEARCH_ARRAY"],"mappings":"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","sourcesContent":["import { vuexfireMutations, firestoreAction } from \"vuexfire\";\nimport { getField, updateField } from \"vuex-map-fields\";\nimport { db } from \"../../firebase/db\";\n\nconst resourcesRef = db.collection(\"resources\");\n\nexport default {\n  namespaced: true,\n  state: {\n    articles: [],\n    articleID: \"\",\n    currentArticle: {\n      topicID: [],\n      parentType: \"\",\n      parentID: \"\",\n      resourceType: \"article\",\n      newsSource: \"\",\n      published: \"\",\n      title: \"\",\n      url: \"\",\n      summary: \"\",\n      thumbURL: \"\",\n      thumbFile: \"\",\n      searchArray: [],\n    },\n  },\n  getters: {\n    getField,\n    currentArticles: (state) => state.articles,\n  },\n  actions: {\n    bindTopics: firestoreAction(({ bindFirestoreRef }) => {\n      // return the promise returned by `bindFirestoreRef`\n      return bindFirestoreRef(\"resources\", db.collection(\"resources\"));\n    }),\n\n    //* fetch all articles under topics\n    async fetchArticles({ commit, state, rootState }, parentType) {\n      let articleList = [];\n\n      await resourcesRef\n        .where(\"topicID\", \"array-contains-any\", [rootState.topics.topicID])\n        .where(\"parentType\", \"==\", parentType)\n        .where(\"resourceType\", \"==\", \"article\")\n        .get()\n        .then(async (querySnapshot) => {\n          querySnapshot.docs.map((doc) => {\n            let articleItem = doc.data();\n\n            //* appends unique video id to each work\n            articleList.push({\n              ...articleItem,\n              id: doc.id,\n            });\n          });\n          await commit(\"SET_ARTICLES\", articleList);\n        });\n      console.log(state.articles);\n    },\n\n    //* fetches all article resources for an event\n    async fetchContentArticles({ state, commit, rootState }, parentType) {\n      const readParentID = (parentType) => {\n        if (parentType == \"event\") {\n          return rootState.events.eventId;\n        } else if (parentType == \"people\") {\n          return rootState.people.personId;\n        }\n      };\n      let parentID = await readParentID(parentType);\n      let articles = [];\n      await resourcesRef\n        .where(\"parentID\", \"==\", parentID)\n        .where(\"parentType\", \"==\", parentType)\n        .where(\"resourceType\", \"==\", \"article\")\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.docs.map((doc) => {\n            let articleItem = doc.data();\n            articles.push({\n              ...articleItem,\n              id: doc.id,\n            });\n          });\n        });\n      await commit(\"SET_ARTICLES\", articles);\n      console.log(state.contentArticles);\n    },\n\n    //* submit new article resource\n    async submitNewArticle({ state, rootState, commit, dispatch }, parentType) {\n      //* sets parentID\n      const readParentID = (parentType) => {\n        if (parentType == \"event\") {\n          return rootState.events.eventId;\n        } else if (parentType == \"people\") {\n          return rootState.people.personId;\n        } else if (parentType == \"topic\") {\n          return rootState.topics.topicID;\n        }\n      };\n      let parentID = await readParentID(parentType);\n      commit(\"SET_ARTICLE_PROPS\", {\n        parentID: parentID,\n        parentType: parentType,\n      });\n      commit(\"SET_ARTICLE_TOPIC_ID\", rootState.topics.topicID);\n      commit(\"SET_SEARCH_ARRAY\", state.currentArticle.title);\n\n      console.log(state.currentArticle);\n      console.log(parentID);\n\n      //* adds new article to firestore\n      await resourcesRef.add(state.currentArticle).then(() => {\n        console.log(\"Submitted Article Resource\");\n        alert(\"Successfully added new article\")\n      });\n      dispatch(\"clearArticleForm\");\n    },\n\n    //* sets current article for edit\n    editArticle({ commit, state }, article) {\n      commit(\"SET_ARTICLE_ID\", article.id);\n\n      //* returns the index of the article for edit\n      let index = state.articles.findIndex((e) => e.id == article.id);\n\n      //* identifies the current video for edit using index\n      let currentArticle = state.articles[index];\n      commit(\"SET_CURRENT_ARTICLE_RESOURCE\", currentArticle);\n    },\n\n    //* submit edit article\n    async submitEditArticle({ state, commit }) {\n      commit(\"UPDATE_SEARCH_ARRAY\", state.currentArticle.title);\n      await resourcesRef\n        .doc(state.articleID)\n        .set(state.currentArticle, { merge: true })\n        .then(() => {\n          console.log(\"Submit Edit for \" + state.currentArticle.title);\n          alert(\"Successfully edited an article\")\n        });\n    },\n\n    //* delete article\n    async deleteArticle({ state, commit }, article) {\n      await commit(\"SET_ARTICLE_ID\", article.id);\n      await resourcesRef\n        .doc(state.articleID)\n        .delete()\n        .then(() => {\n          console.log(\"Successfully deleted\");\n          alert(\"Deleted an article\");\n        });\n      commit(\"SET_ARTICLE_ID\", null);\n    },\n\n    //* clears article form\n    clearArticleForm({ commit }) {\n      commit(\"SET_CURRENT_ARTICLE_RESOURCE\", {\n        topicID: [],\n        parentType: \"\",\n        parentID: \"\",\n        resourceType: \"article\",\n        newsSource: \"\",\n        published: \"\",\n        title: \"\",\n        url: \"\",\n        summary: \"\",\n        thumbURL: \"\",\n        thumbFile: \"\",\n        searchArray: [],\n      });\n    },\n  },\n  mutations: {\n    ...vuexfireMutations,\n    updateField,\n    SET_ARTICLES: (state, articles) => (state.articles = articles),\n    SET_ARTICLE_ID: (state, id) => (state.articleID = id),\n    SET_CURRENT_ARTICLE_RESOURCE: (state, article) =>\n      (state.currentArticle = article),\n    SET_ARTICLE_TOPIC_ID: (state, id) => {\n      state.currentArticle.topicID.push(id);\n    },\n    SET_SEARCH_ARRAY: (state, array) => {\n      //* splits the words into strings and stores in newArray\n      let newArray = array.split(\" \");\n      state.currentArticle.searchArray.push(...newArray);\n    },\n    SET_ARTICLE_PROPS: (state, props) =>\n      (state.currentArticle = {\n        ...state.currentArticle,\n        ...props,\n      }),\n    UPDATE_SEARCH_ARRAY: (state, array) => {\n      let newArray = array.split(\" \");\n      state.currentArticle.searchArray = newArray;\n    },\n  },\n};\n"]}]}