{"remainingRequest":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/babel-loader/lib/index.js!/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/store/modules/articles.js","dependencies":[{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/store/modules/articles.js","mtime":1642657887732},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/cache-loader/dist/cjs.js","mtime":1640582283784},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/babel-loader/lib/index.js","mtime":1640582283745},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/eslint-loader/index.js","mtime":1640582288508}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/store/modules/articles.js"],"names":["vuexfireMutations","firestoreAction","getField","updateField","db","resourcesRef","collection","namespaced","state","articles","articleID","currentArticle","topicID","parentType","parentID","resourceType","newsSource","published","title","url","summary","thumbURL","thumbFile","searchArray","getters","currentArticles","actions","bindTopics","bindFirestoreRef","fetchArticles","commit","rootState","articleList","where","topics","get","then","querySnapshot","docs","map","doc","articleItem","data","push","id","console","log","fetchContentArticles","readParentID","events","eventId","people","personId","submitNewArticle","dispatch","add","addArticleToDB","length","batch","forEach","docRef","set","editArticle","article","index","findIndex","e","submitEditArticle","merge","deleteArticle","delete","clearArticleForm","mutations","SET_ARTICLES","SET_ARTICLE_ID","SET_CURRENT_ARTICLE_RESOURCE","SET_ARTICLE_TOPIC_ID","SET_SEARCH_ARRAY","array","newArray","split","SET_ARTICLE_PROPS","props","UPDATE_SEARCH_ARRAY","UPDATE_ARTICLES","UPDATE_ARTICLES_ID"],"mappings":"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","sourcesContent":["import { vuexfireMutations, firestoreAction } from \"vuexfire\";\nimport { getField, updateField } from \"vuex-map-fields\";\nimport { db } from \"../../firebase/db\";\n\nconst resourcesRef = db.collection(\"resources\");\n\nexport default {\n  namespaced: true,\n  state: {\n    articles: [],\n    articleID: \"\",\n    currentArticle: {\n      topicID: [],\n      parentType: \"\",\n      parentID: \"\",\n      resourceType: \"article\",\n      newsSource: \"\",\n      published: \"\",\n      title: \"\",\n      url: \"\",\n      summary: \"\",\n      thumbURL: \"\",\n      thumbFile: \"\",\n      searchArray: [],\n    },\n  },\n  getters: {\n    getField,\n    currentArticles: (state) => state.articles,\n  },\n  actions: {\n    bindTopics: firestoreAction(({ bindFirestoreRef }) => {\n      // return the promise returned by `bindFirestoreRef`\n      return bindFirestoreRef(\"resources\", db.collection(\"resources\"));\n    }),\n\n    //* fetch all articles under topics\n    async fetchArticles({ commit, state, rootState }, parentType) {\n      let articleList = [];\n\n      await resourcesRef\n        .where(\"topicID\", \"array-contains-any\", [rootState.topics.topicID])\n        .where(\"parentType\", \"==\", parentType)\n        .where(\"resourceType\", \"==\", \"article\")\n        .get()\n        .then(async (querySnapshot) => {\n          querySnapshot.docs.map((doc) => {\n            let articleItem = doc.data();\n\n            //* appends unique video id to each work\n            articleList.push({\n              ...articleItem,\n              id: doc.id,\n            });\n          });\n          await commit(\"SET_ARTICLES\", articleList);\n        });\n      console.log(\"fetchArticles\", state.articles);\n    },\n\n    //* fetches all article resources for an event\n    async fetchContentArticles({ state, commit, rootState }, parentType) {\n      const readParentID = (parentType) => {\n        if (parentType == \"event\") {\n          console.log(\"1) eventID:\", rootState.events.eventId);\n          return rootState.events.eventId;\n        } else if (parentType == \"people\") {\n          return rootState.people.personId;\n        }\n      };\n      let parentID = await readParentID(parentType);\n      let articles = [];\n      await resourcesRef\n        .where(\"parentID\", \"==\", parentID)\n        .where(\"parentType\", \"==\", parentType)\n        .where(\"resourceType\", \"==\", \"article\")\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.docs.map((doc) => {\n            console.log(\"2) fetching articles eventID:\", parentID);\n            let articleItem = doc.data();\n            articles.push({\n              ...articleItem,\n              id: doc.id,\n            });\n          });\n        });\n      await commit(\"SET_ARTICLES\", articles);\n      console.log(\"3) fetched articles:\", state.articles);\n    },\n\n    //* submit new article resource\n    async submitNewArticle({ state, commit, rootState, dispatch }, parentType) {\n      const readParentID = (parentType) => {\n        if (parentType == \"event\") {\n          return rootState.events.eventId;\n        } else if (parentType == \"people\") {\n          return rootState.people.personId;\n        } else if (parentType == \"topic\") {\n          return rootState.topics.topicID;\n        }\n      };\n      let parentID = await readParentID(parentType);\n\n      commit(\"SET_ARTICLE_PROPS\", {\n        parentID: parentID,\n        parentType: parentType,\n      });\n      commit(\"SET_ARTICLE_TOPIC_ID\", rootState.topics.topicID);\n      commit(\"SET_SEARCH_ARRAY\", state.currentArticle.title);\n      if (parentID) {\n        console.log(\"4) has parentID\");\n\n        //* adds new article to firestore\n        await resourcesRef.add(state.currentArticle).then(() => {\n          console.log(\"Submitted Article Resource\");\n        });\n      } else {\n        console.log(\"4) does not have parentID\");\n      }\n\n      commit(\"UPDATE_ARTICLES\");\n      console.log(\"4) new article:\", state.currentArticle);\n      console.log(\"5) articles\", state.articles);\n\n      dispatch(\"clearArticleForm\");\n    },\n\n    async addArticleToDB({ state }) {\n      if (state.articles.length > 0) {\n        var batch = db.batch();\n        state.articles.forEach((doc) => {\n          var docRef = resourcesRef.doc(); //automatically generate unique id\n          batch.set(docRef, doc);\n        });\n        batch.commit();\n        console.log(\"9) Submitted Articles:\", state.articles);\n      }\n    },\n\n    //* sets current article for edit\n    editArticle({ commit, state }, article) {\n      commit(\"SET_ARTICLE_ID\", article.id);\n\n      //* returns the index of the article for edit\n      let index = state.articles.findIndex((e) => e.id == article.id);\n\n      //* identifies the current video for edit using index\n      let currentArticle = state.articles[index];\n      commit(\"SET_CURRENT_ARTICLE_RESOURCE\", currentArticle);\n    },\n\n    //* submit edit article\n    async submitEditArticle({ state, commit }) {\n      commit(\"UPDATE_SEARCH_ARRAY\", state.currentArticle.title);\n      await resourcesRef\n        .doc(state.articleID)\n        .set(state.currentArticle, { merge: true })\n        .then(() => {\n          console.log(\"Submit Edit for\" + state.currentArticle.title);\n        });\n    },\n\n    //* delete article\n    async deleteArticle({ state, commit }, article) {\n      await commit(\"SET_ARTICLE_ID\", article.id);\n      await resourcesRef\n        .doc(state.articleID)\n        .delete()\n        .then(() => {\n          console.log(\"Successfully deleted\");\n        });\n      commit(\"SET_ARTICLE_ID\", null);\n    },\n\n    //* clears article form\n    clearArticleForm({ commit }) {\n      commit(\"SET_CURRENT_ARTICLE_RESOURCE\", {\n        topicID: [],\n        parentType: \"\",\n        parentID: \"\",\n        resourceType: \"article\",\n        newsSource: \"\",\n        published: \"\",\n        title: \"\",\n        url: \"\",\n        summary: \"\",\n        thumbURL: \"\",\n        thumbFile: \"\",\n        searchArray: [],\n      });\n    },\n  },\n  mutations: {\n    ...vuexfireMutations,\n    updateField,\n    SET_ARTICLES: (state, articles) => (state.articles = articles),\n    SET_ARTICLE_ID: (state, id) => (state.articleID = id),\n    SET_CURRENT_ARTICLE_RESOURCE: (state, article) =>\n      (state.currentArticle = article),\n    SET_ARTICLE_TOPIC_ID: (state, id) => {\n      state.currentArticle.topicID.push(id);\n    },\n    SET_SEARCH_ARRAY: (state, array) => {\n      //* splits the words into strings and stores in newArray\n      let newArray = array.split(\" \");\n      state.currentArticle.searchArray.push(...newArray);\n    },\n    SET_ARTICLE_PROPS: (state, props) =>\n      (state.currentArticle = {\n        ...state.currentArticle,\n        ...props,\n      }),\n    UPDATE_SEARCH_ARRAY: (state, array) => {\n      let newArray = array.split(\" \");\n      state.currentArticle.searchArray = newArray;\n    },\n    UPDATE_ARTICLES: (state) => state.articles.push(state.currentArticle),\n    UPDATE_ARTICLES_ID: (state, id) => {\n      state.articles.forEach(function(article) {\n        article.parentID = id;\n      });\n      console.log(\"8) update articles with eventids:\", state.articles);\n    },\n  },\n};\n"]}]}