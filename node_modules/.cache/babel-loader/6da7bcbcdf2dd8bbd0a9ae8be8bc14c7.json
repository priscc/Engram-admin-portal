{"remainingRequest":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/babel-loader/lib/index.js!/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/src/components/ModifyContent/ContentDetails/Events/Forms/EventMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/src/components/ModifyContent/ContentDetails/Events/Forms/EventMap.vue","mtime":1619065403992},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/cache-loader/dist/cjs.js","mtime":1618023230646},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/babel-loader/lib/index.js","mtime":1618023230532},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/cache-loader/dist/cjs.js","mtime":1618023230646},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/vue-loader/lib/index.js","mtime":1618023225118}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["EventMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,SAAA,QAAA,iBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,SADA;AAEA,MAAA,IAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA,CACA;AACA,QAAA,IAAA,EAAA,gBADA;AAEA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CACA,KADA,EAEA,KAFA,EAGA,KAHA,EAIA,KAJA,EAKA,KALA,EAMA,KANA,EAOA,KAPA,EAQA,KARA,EASA,KATA,EAUA,KAVA,EAWA,KAXA,EAYA,KAZA,EAaA,KAbA,EAcA,KAdA,EAeA,KAfA,EAgBA,KAhBA,EAiBA,KAjBA,EAkBA,KAlBA,EAmBA,KAnBA,EAoBA,KApBA,EAqBA,KArBA,EAsBA,KAtBA,EAuBA,KAvBA,EAwBA,KAxBA,EAyBA,KAzBA,EA0BA,KA1BA,EA2BA,KA3BA,EA4BA,KA5BA,EA6BA,KA7BA,EA8BA,KA9BA,EA+BA,KA/BA,EAgCA,KAhCA,EAiCA,KAjCA,EAkCA,KAlCA,EAmCA,KAnCA,EAoCA,KApCA,EAqCA,KArCA,EAsCA,KAtCA,EAuCA,KAvCA,EAwCA,KAxCA,EAyCA,KAzCA,EA0CA,KA1CA,EA2CA,KA3CA,EA4CA,KA5CA,EA6CA,KA7CA,EA8CA,KA9CA,CAAA;AAFA,OADA,EAoDA;AACA,QAAA,IAAA,EAAA,iBADA;AAEA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAAA;AAFA,OApDA,EAwDA;AACA,QAAA,IAAA,EAAA,eADA;AAEA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAAA;AAFA,OAxDA,EA4DA;AACA,QAAA,IAAA,EAAA,WADA;AAEA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CACA,KADA,EAEA,KAFA,EAGA,KAHA,EAIA,KAJA,EAKA,KALA,EAMA,KANA,EAOA,KAPA,EAQA,KARA,EASA,KATA,EAUA,KAVA,EAWA,KAXA,EAYA,KAZA,EAaA,KAbA,EAcA,KAdA,EAeA,KAfA,EAgBA,KAhBA,EAiBA,KAjBA,EAkBA,KAlBA,CAAA;AAFA,OA5DA,EAmFA;AACA,QAAA,IAAA,EAAA,eADA;AAEA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CACA,KADA,EAEA,KAFA,EAGA,KAHA,EAIA,KAJA,EAKA,KALA,EAMA,KANA,EAOA,KAPA,EAQA,KARA,EASA,KATA,EAUA,KAVA,EAWA,KAXA,EAYA,KAZA,EAaA,KAbA,EAcA,KAdA,CAAA;AAFA,OAnFA,EAsGA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CACA,KADA,EAEA,KAFA,EAGA,KAHA,EAIA,KAJA,EAKA,KALA,EAMA,KANA,EAOA,KAPA,EAQA,KARA,EASA,KATA,EAUA,KAVA,EAWA,KAXA,EAYA,KAZA,EAaA,KAbA,EAcA,KAdA,EAeA,KAfA,EAgBA,KAhBA,EAiBA,KAjBA,EAkBA,KAlBA,EAmBA,KAnBA,EAoBA,KApBA,EAqBA,KArBA,EAsBA,KAtBA,EAuBA,KAvBA,EAwBA,KAxBA,EAyBA,KAzBA,EA0BA,KA1BA,EA2BA,KA3BA,EA4BA,KA5BA,EA6BA,KA7BA,EA8BA,KA9BA,EA+BA,KA/BA,EAgCA,KAhCA,EAiCA,KAjCA,EAkCA,KAlCA,EAmCA,KAnCA,EAoCA,KApCA,EAqCA,KArCA,EAsCA,KAtCA,EAuCA,KAvCA,EAwCA,KAxCA,EAyCA,KAzCA,EA0CA,KA1CA,EA2CA,KA3CA,EA4CA,KA5CA,EA6CA,KA7CA,EA8CA,KA9CA,EA+CA,KA/CA,EAgDA,KAhDA,EAiDA,KAjDA,EAkDA,KAlDA,EAmDA,KAnDA,EAoDA,KApDA,EAqDA,KArDA,EAsDA,KAtDA,EAuDA,KAvDA,EAwDA,KAxDA,EAyDA,KAzDA,EA0DA,KA1DA,EA2DA,KA3DA,EA4DA,KA5DA,EA6DA,KA7DA,EA8DA,KA9DA,EA+DA,KA/DA,EAgEA,KAhEA,CAAA;AAFA,OAtGA,EA2KA;AACA,QAAA,IAAA,EAAA,eADA;AAEA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CAAA,KAAA,EAAA,KAAA,CAAA;AAFA,OA3KA,EA+KA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAAA;AAFA,OA/KA,EAmLA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CACA,KADA,EAEA,KAFA,EAGA,KAHA,EAIA,KAJA,EAKA,KALA,EAMA,KANA,EAOA,KAPA,EAQA,KARA,EASA,KATA,EAUA,KAVA,EAWA,KAXA,EAYA,KAZA,EAaA,KAbA,EAcA,KAdA,EAeA,KAfA,EAgBA,KAhBA,EAiBA,KAjBA,EAkBA,KAlBA,EAmBA,KAnBA,EAoBA,KApBA,CAAA;AAFA,OAnLA,EA4MA;AACA,QAAA,IAAA,EAAA,QADA;AAEA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,CAAA;AAFA,OA5MA,EAiNA;AACA,QAAA,IAAA,EAAA,OADA;AAEA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CAAA,KAAA,CAAA;AAFA,OAjNA,EAqNA;AACA,QAAA,IAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,CACA,KADA,EAGA,MAHA,EAIA,KAJA,EAKA,KALA,EAMA,KANA,EAOA,KAPA,EAQA,KARA,EASA,KATA,EAUA,KAVA,EAWA,KAXA,EAYA,KAZA,EAaA,KAbA,EAcA,KAdA,EAeA,KAfA,EAgBA,KAhBA,EAiBA,KAjBA,EAkBA,KAlBA,EAmBA,KAnBA,EAoBA,KApBA,EAqBA,KArBA,EAsBA,KAtBA,EAuBA,KAvBA,EAwBA,KAxBA,EAyBA,KAzBA,EA0BA,KA1BA,EA2BA,KA3BA,EA4BA,KA5BA,EA6BA,KA7BA,EA8BA,KA9BA,CAAA;AAFA,OArNA,CAHA;AA4PA,MAAA,KAAA,EAAA,IA5PA;AA6PA,MAAA,QAAA,EAAA,IA7PA;AA8PA,MAAA,MAAA,EAAA,IA9PA;AA+PA,MAAA,UAAA,EAAA,IA/PA;AAgQA,MAAA,IAAA,EAAA,IAhQA;AAiQA,MAAA,GAAA,EAAA;AAjQA,KAAA;AAmQA,GArQA;AAsQA,EAAA,QAAA,oBACA,SAAA,CAAA,QAAA,EAAA,CACA,4BADA,EAEA,qBAFA,CAAA,CADA,CAtQA;AA4QA,EAAA,OAAA,kCACA,UAAA,CAAA,QAAA,EAAA,CAAA,YAAA,EAAA,WAAA,CAAA,CADA;AAEA,IAAA,OAFA,qBAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,EAAA,CAAA,MAAA,CAAA,MAAA,EAAA,EAAA,CAAA,QAAA,EAAA,KAAA,CAAA,MAAA,EADA,CAGA;;AACA,gBAAA,KAJA,GAIA,IAJA;AAKA,gBAAA,QALA,GAKA,GALA;AAMA,gBAAA,MANA,GAMA,KAAA,GAAA,QANA;AAQA,gBAAA,UARA,GAQA,EAAA,CAAA,GAAA,CACA,QADA,GAEA,KAFA,CAEA,KAAA,GAAA,GAAA,GAAA,IAAA,CAAA,EAFA,EAGA,MAHA,CAGA,CAAA,CAAA,CAAA,EAAA,CAAA,CAHA,EAIA,SAJA,CAIA,CAAA,KAAA,GAAA,GAAA,EAAA,MAAA,GAAA,IAAA,GAAA,CAAA,CAJA,EAKA,SALA,CAKA,GALA,CARA;AAeA,gBAAA,IAfA,GAeA,EAAA,CAAA,GAAA,CAAA,IAAA,GAAA,UAAA,CAAA,UAAA,CAfA;AAiBA,gBAAA,GAjBA,GAiBA,EAAA,CACA,MADA,CACA,MADA,EAEA,MAFA,CAEA,KAFA,EAGA,OAHA,CAGA,eAHA,EAGA,IAHA,EAIA,MAJA,CAIA,KAJA,EAKA,IALA,CAKA,qBALA,EAKA,UALA,EAMA,IANA,CAMA,SANA,EAMA,eANA,EAOA,OAPA,CAOA,wBAPA,EAOA,IAPA,EAQA,MARA,CAQA,GARA,CAjBA;AA2BA,gBAAA,CA3BA,GA2BA,KAAA,CAAA,KA3BA;AA6BA,gBAAA,GAAA,CACA,MADA,CACA,MADA,EAEA,KAFA,CAGA,QAAA,CAAA,KAAA,CACA,CADA,EAEA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,UAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA;AACA,yBAAA,CAAA,CAAA,EAAA,KAAA,KAAA,CADA,CACA;AACA,iBAFA,CAFA,CAHA,EAUA,IAVA,CAUA,OAVA,EAUA,QAVA,EAWA,IAXA,CAWA,GAXA,EAWA,IAXA,EAYA,IAZA,CAYA,MAZA,EAYA,SAZA;;AAcA,qBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,kBAAA,GAAA,CACA,MADA,CACA,MADA,EAEA,KAFA,CAGA,QAAA,CAAA,KAAA,CACA,CADA,EAEA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,UAAA,CAAA,MAAA,CACA,UAAA,CAAA,EAAA;AACA,2BAAA,KAAA,IAAA,CAAA,CAAA,EAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AACA,mBAFA,CAEA,IAFA,CAEA,KAFA,CADA,CAFA,CAHA,EAYA,IAZA,CAYA,OAZA,EAYA,kBAZA,EAaA,IAbA,CAaA,GAbA,EAaA,IAbA,EAcA,IAdA,CAcA;AAAA,iCAAA,KAAA,CAAA,IAAA,CAAA,CAAA,EAAA;AAAA,mBAdA,EAeA,IAfA,CAeA,MAfA,EAeA,SAfA,EAgBA,EAhBA,CAgBA,WAhBA,EAgBA,YAAA;AACA,wBAAA,MAAA,GAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AACA,oBAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA,SAAA;AACA,oBAAA,QAAA,CAAA,aAAA,CAAA,SAAA,EAAA,SAAA,GAAA,MAAA,CAAA,IAAA,CACA,WADA,CAAA;AAGA,mBAtBA,EAuBA,EAvBA,CAuBA,UAvBA,EAuBA,YAAA;AACA,wBAAA,MAAA,GAAA,EAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AACA,oBAAA,MAAA,CAAA,IAAA,CAAA,MAAA,EAAA,SAAA;AACA,oBAAA,QAAA,CAAA,aAAA,CAAA,SAAA,EAAA,SAAA,GAAA,EAAA;AACA,mBA3BA;AA4BA,iBAxEA,CA0EA;;;AACA,gBAAA,YA3EA,GA2EA,EAAA,CAAA,GAAA,CACA,IADA,GAEA,CAFA,CAEA,UAAA,CAAA,EAAA;AACA,sBAAA,CAAA,GAAA,UAAA,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CADA,CACA;;AACA,yBAAA,CAAA,CAAA,CAAA,CAAA;AACA,iBALA,EAMA,CANA,CAMA,UAAA,CAAA,EAAA;AACA,sBAAA,CAAA,GAAA,UAAA,CAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CADA,CACA;;AACA,yBAAA,CAAA,CAAA,CAAA,CAAA;AACA,iBATA,EAUA,WAVA,CAUA,QAVA,CA3EA;AAuFA,gBAAA,WAvFA,GAuFA,CACA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBADA,EAEA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAFA,EAGA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAHA,EAIA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAJA,EAKA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBALA,EAMA;AAAA,kBAAA,GAAA,EAAA,gBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBANA,EAOA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAPA,EAQA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBARA,EASA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBATA,EAUA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAVA,EAWA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAXA,EAYA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAZA,EAaA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAbA,EAcA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAdA,EAeA;AAAA,kBAAA,GAAA,EAAA,gBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAfA,EAgBA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAhBA,EAiBA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAjBA,EAkBA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAlBA,EAmBA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAnBA,EAoBA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBApBA,EAqBA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBArBA,EAsBA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAtBA,EAuBA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAvBA,EAwBA;AAAA,kBAAA,GAAA,EAAA,iBAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAxBA,CAvFA,EAkHA;;AACA,gBAAA,GAAA,CACA,MADA,CACA,MADA,EAEA,IAFA,CAEA,GAFA,EAEA,YAAA,CAAA,WAAA,CAFA,EAGA;AACA;AAJA,iBAKA,IALA,CAKA,MALA,EAKA,SALA;;AAnHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyHA;AA3HA,IA5QA;AAyYA,EAAA,OAzYA,qBAyYA;AACA,SAAA,OAAA;AACA;AA3YA,CAAA","sourcesContent":["<template>\n  <v-card class=\"mx-auto mt-4\" width=\"62vw\" height=\"40vw\">\n    <v-card class=\"mx-auto\" width=\"62vw\" height=\"5vw\" color=\"#273238\">\n      <div class=\"d-flex\">\n        <v-container class=\"pt-8 pl-12 d-flex\">\n          <div id=\"nav\">\n            <router-link\n              class=\"col\"\n              to=\"/addcontent/modifycontent/events/general\"\n              exact\n              >General</router-link\n            >\n            <router-link\n              class=\"col\"\n              to=\"/addcontent/modifycontent/events/map\"\n              exact\n              >Map</router-link\n            >\n            <router-link\n              class=\"col\"\n              to=\"/addcontent/modifycontent/events/text\"\n              exact\n              >Text</router-link\n            >\n            <router-link\n              class=\"col\"\n              to=\"/addcontent/modifycontent/events/resources\"\n              exact\n              >Resources</router-link\n            >\n          </div>\n        </v-container>\n        <div class=\"d-flex justify-end\">\n          <span class=\"material-icons\">\n            <v-icon\n              size=\"40\"\n              color=\"#3891A6\"\n              @click=\"closeForm('Events', '/events')\"\n            >\n              disabled_by_default\n            </v-icon>\n          </span>\n        </div>\n      </div>\n    </v-card>\n    <v-row>\n      <v-col cols=\"12\" md=\"11\">\n        <div class=\"legend pb-6\"></div>\n        <div class=\"view\" id=\"map\"></div>\n      </v-col>\n\n      <v-col cols=\"12\" md=\"11\"> kkk </v-col>\n    </v-row>\n    <div class=\"d-flex justify-end pr-12\">\n      <v-btn\n        class=\"white--text\"\n        width=\"140\"\n        color=\"#3891A6\"\n        elevation=\"2\"\n        @click=\"handleSave\"\n        >Save</v-btn\n      >\n    </div>\n  </v-card>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\nimport { mapFields } from \"vuex-map-fields\";\n\nexport default {\n  data() {\n    return {\n      items: countries,\n      data: [],\n      sets: [\n        {\n          name: \"Central Europe\",\n          set: d3.set([\n            \"BEL\",\n            \"CHE\",\n            \"DEU\",\n            \"AUT\",\n            \"ESP\",\n            \"FRA\",\n            \"ATF\",\n            \"GBR\",\n            \"GGY\",\n            \"JEY\",\n            \"FLK\",\n            \"SGS\",\n            \"GRC\",\n            \"MLT\",\n            \"IRL\",\n            \"ITA\",\n            \"LUX\",\n            \"NLD\",\n            \"AND\",\n            \"POL\",\n            \"PRT\",\n            \"TUR\",\n            \"CYP\",\n            \"CYN\",\n            \"MON\",\n            \"ALD\",\n            \"IMN\",\n            \"LTU\",\n            \"LVA\",\n            \"EST\",\n            \"BLR\",\n            \"UKR\",\n            \"MDA\",\n            \"ROU\",\n            \"HUN\",\n            \"SVK\",\n            \"SVN\",\n            \"HRV\",\n            \"BIH\",\n            \"CZE\",\n            \"BGR\",\n            \"KOS\",\n            \"MKD\",\n            \"ALB\",\n            \"MNE\",\n            \"SRB\",\n          ]),\n        },\n        {\n          name: \"Northern Europe\",\n          set: d3.set([\"DNK\", \"FRO\", \"FIN\", \"GRL\", \"ISL\", \"NOR\", \"SWE\"]),\n        },\n        {\n          name: \"North America\",\n          set: d3.set([\"CAN\", \"MEX\", \"USA\"]),\n        },\n        {\n          name: \"Caribbean\",\n          set: d3.set([\n            \"BLZ\",\n            \"CRI\",\n            \"CUB\",\n            \"GTM\",\n            \"HND\",\n            \"NIC\",\n            \"PAN\",\n            \"SLV\",\n            \"HTI\",\n            \"JAM\",\n            \"DOM\",\n            \"PRI\",\n            \"BHS\",\n            \"TCA\",\n            \"ATG\",\n            \"DMA\",\n            \"BRB\",\n            \"GRD\",\n          ]),\n        },\n        {\n          name: \"South America\",\n          set: d3.set([\n            \"ARG\",\n            \"BOL\",\n            \"BRA\",\n            \"CHL\",\n            \"COL\",\n            \"ECU\",\n            \"FLK\",\n            \"GUY\",\n            \"PRY\",\n            \"PER\",\n            \"SUR\",\n            \"URY\",\n            \"VEN\",\n            \"TTO\",\n          ]),\n        },\n        {\n          name: \"Africa\",\n          set: d3.set([\n            \"AGO\",\n            \"BDI\",\n            \"BEN\",\n            \"BFA\",\n            \"BWA\",\n            \"CAF\",\n            \"CIV\",\n            \"CMR\",\n            \"COD\",\n            \"COD\",\n            \"COG\",\n            \"COM\",\n            \"CPV\",\n            \"DJI\",\n            \"DZA\",\n            \"EGY\",\n            \"ERI\",\n            \"ETH\",\n            \"GAB\",\n            \"GHA\",\n            \"GIN\",\n            \"GMB\",\n            \"GNB\",\n            \"GNQ\",\n            \"KEN\",\n            \"LBR\",\n            \"LBY\",\n            \"LSO\",\n            \"MAR\",\n            \"MDG\",\n            \"MLI\",\n            \"MOZ\",\n            \"MRT\",\n            \"MUS\",\n            \"MWI\",\n            \"MYT\",\n            \"NAM\",\n            \"NER\",\n            \"NGA\",\n            \"REU\",\n            \"RWA\",\n            \"ESH\",\n            \"SDN\",\n            \"SDS\",\n            \"SEN\",\n            \"SHN\",\n            \"SHN\",\n            \"SLE\",\n            \"SOM\",\n            \"SOL\",\n            \"SSD\",\n            \"STP\",\n            \"STP\",\n            \"SWZ\",\n            \"SYC\",\n            \"TCD\",\n            \"TGO\",\n            \"TUN\",\n            \"TZA\",\n            \"TZA\",\n            \"UGA\",\n            \"ZAF\",\n            \"ZMB\",\n            \"ZWE\",\n          ]),\n        },\n        {\n          name: \"South Pacific\",\n          set: d3.set([\"AUS\", \"NZL\"]),\n        },\n        {\n          name: \"India\",\n          set: d3.set([\"IND\", \"BGD\", \"LKA\"]),\n        },\n        {\n          name: \"Orient\",\n          set: d3.set([\n            \"AZE\",\n            \"ARE\",\n            \"QAT\",\n            \"IRN\",\n            \"AFG\",\n            \"PAK\",\n            \"BHR\",\n            \"SAU\",\n            \"YEM\",\n            \"OMN\",\n            \"SYR\",\n            \"JOR\",\n            \"IRQ\",\n            \"KWT\",\n            \"ISR\",\n            \"LBN\",\n            \"PSX\",\n            \"PSR\",\n            \"GEO\",\n            \"ARM\",\n          ]),\n        },\n        {\n          name: \"Russia\",\n          set: d3.set([\"RUS\", \"KAZ\", \"UZB\", \"TKM\", \"KGZ\", \"TJK\"]),\n        },\n\n        {\n          name: \"China\",\n          set: d3.set([\"CHN\"]),\n        },\n        {\n          name: \"Asia\",\n          set: d3.set([\n            \"BTN\",\n\n            \"CHN2\",\n            \"JPN\",\n            \"IDN\",\n            \"MNG\",\n            \"NPL\",\n            \"MMR\",\n            \"THA\",\n            \"KHM\",\n            \"LAO\",\n            \"VNM\",\n            \"PRK\",\n            \"KOR\",\n            \"TWN\",\n            \"MYS\",\n            \"PNG\",\n            \"SLB\",\n            \"VUT\",\n            \"NCL\",\n            \"BRN\",\n            \"PHL\",\n            \"TLS\",\n            \"HKG\",\n            \"FJI\",\n            \"GUM\",\n            \"PLW\",\n            \"FSM\",\n            \"MNP\",\n            \"KAS\",\n          ]),\n        },\n      ],\n      width: null,\n      mapRatio: null,\n      height: null,\n      projection: null,\n      path: null,\n      svg: null,\n    };\n  },\n  computed: {\n    ...mapFields(\"events\", [\n      \"currentEvent.descriptionMD\",\n      \"currentEvent.mainMD\",\n    ]),\n  },\n  methods: {\n    ...mapActions(\"events\", [\"handleSave\", \"closeForm\"]),\n    async primary() {\n      d3.select(window).on(\"resize\", this.resize);\n\n      // var width = document.querySelector(\"#map\").offsetWidth;\n      var width = 1400;\n      var mapRatio = 0.7;\n      var height = width * mapRatio;\n\n      var projection = d3.geo\n        .mercator()\n        .scale(width / 1.5 / Math.PI)\n        .rotate([-1, 0])\n        .translate([width / 1.5, (height * 1.35) / 2])\n        .precision(0.1);\n\n      var path = d3.geo.path().projection(projection);\n\n      var svg = d3\n        .select(\"#map\")\n        .append(\"div\")\n        .classed(\"svg-container\", true)\n        .append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin\")\n        .attr(\"viewBox\", \"0 0 2000 2700\")\n        .classed(\"svg-content-responsive\", true)\n        .append(\"g\");\n\n      var w = this.items;\n\n      svg\n        .append(\"path\")\n        .datum(\n          topojson.merge(\n            w,\n            w.objects.units.geometries.filter(function (d) {\n              return d.id !== \"ATA\"; // Sorry Antarctica\n            })\n          )\n        )\n        .attr(\"class\", \"border\")\n        .attr(\"d\", path)\n        .attr(\"fill\", \"#d9edf7\");\n\n      for (var i = 0; i < this.sets.length; i++) {\n        svg\n          .append(\"path\")\n          .datum(\n            topojson.merge(\n              w,\n              w.objects.units.geometries.filter(\n                function (d) {\n                  return this.sets[i].set.has(d.id);\n                }.bind(this)\n              )\n            )\n          )\n          .attr(\"class\", \"regions selected\")\n          .attr(\"d\", path)\n          .attr({ \"data-name\": this.sets[i].name })\n          .attr(\"fill\", \"#464646\")\n          .on(\"mouseover\", function () {\n            var region = d3.select(this);\n            region.attr(\"fill\", \"#ff9800\");\n            document.querySelector(\".legend\").innerText = region.attr(\n              \"data-name\"\n            );\n          })\n          .on(\"mouseout\", function () {\n            var region = d3.select(this);\n            region.attr(\"fill\", \"#464646\");\n            document.querySelector(\".legend\").innerText = \"\";\n          });\n      }\n\n      //This is the accessor function we talked about above\n      var lineFunction = d3.svg\n        .line()\n        .x(function (d) {\n          var x = projection([d.lon, d.lat]); // [longitude, latitude] -- [x, y]\n          return x[0];\n        })\n        .y(function (d) {\n          var x = projection([d.lon, d.lat]); // [longitude, latitude] -- [x, y]\n          return x[1];\n        })\n        .interpolate(\"linear\");\n\n      var coordinates = [\n        { lon: 114.7000004839849, lat: 42.02254999787689 },\n        { lon: 113.1672067240925, lat: 40.58903258718775 },\n        { lon: 108.5885758869572, lat: 38.01556166653811 },\n        { lon: 104.4627858529494, lat: 37.53921058237947 },\n        { lon: 102.1835644979335, lat: 34.91691173911467 },\n        { lon: 100.999099564981, lat: 33.99707385393174 },\n        { lon: 97.18808307950999, lat: 32.3025788858757 },\n        { lon: 95.66013730464984, lat: 29.09017865729048 },\n        { lon: 98.57342394735846, lat: 28.2005605394243 },\n        { lon: 101.8740222074411, lat: 26.13804480224899 },\n        { lon: 104.9973476309196, lat: 24.53510765041384 },\n        { lon: 106.6435046493752, lat: 22.50452433642101 },\n        { lon: 109.5871716936629, lat: 21.25475605332846 },\n        { lon: 116.4594192837376, lat: 22.9595454015056 },\n        { lon: 120.818784551134, lat: 26.99130045205105 },\n        { lon: 122.2920420167496, lat: 30.74267415824754 },\n        { lon: 119.3883278138953, lat: 34.83517495263233 },\n        { lon: 122.8639669075088, lat: 37.2223767144566 },\n        { lon: 120.9378067497715, lat: 38.30397804622267 },\n        { lon: 119.5893720324662, lat: 37.42414800444499 },\n        { lon: 117.8742460402969, lat: 38.72758280400602 },\n        { lon: 118.3845903213028, lat: 39.36174581708054 },\n        { lon: 121.5839796969244, lat: 40.71770109427904 },\n        { lon: 114.7000004839849, lat: 42.02254999787689 },\n      ];\n\n      //The line SVG Path we draw\n      svg\n        .append(\"path\")\n        .attr(\"d\", lineFunction(coordinates))\n        // .attr(\"stroke\", \"blue\")\n        // .attr(\"stroke-width\", 2)\n        .attr(\"fill\", \"#BDFF00\");\n    },\n  },\n  mounted() {\n    this.primary();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#nav {\n  a {\n    padding: 4px 24px;\n    text-decoration: none;\n    color: #ffffff;\n    font-weight: lighter;\n    background-color: #5b6368;\n\n    &.router-link-exact-active {\n      background-color: #3891a6;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components/ModifyContent/ContentDetails/Events/Forms"}]}