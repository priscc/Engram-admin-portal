{"remainingRequest":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/babel-loader/lib/index.js!/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/store/modules/videos.js","dependencies":[{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/store/modules/videos.js","mtime":1639249966553},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/cache-loader/dist/cjs.js","mtime":1639206897149},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/babel-loader/lib/index.js","mtime":1639206897121},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/eslint-loader/index.js","mtime":1639206903358}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvZW5ncmFtL0RvY3VtZW50cy9XZWJfYXBwcy9hcC1zdHVkeS1iaXRlcy1hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkuanMiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvZW5ncmFtL0RvY3VtZW50cy9XZWJfYXBwcy9hcC1zdHVkeS1iaXRlcy1hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvZW5ncmFtL0RvY3VtZW50cy9XZWJfYXBwcy9hcC1zdHVkeS1iaXRlcy1hZG1pbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0IHsgdnVleGZpcmVNdXRhdGlvbnMsIGZpcmVzdG9yZUFjdGlvbiB9IGZyb20gInZ1ZXhmaXJlIjsKaW1wb3J0IHsgZ2V0RmllbGQsIHVwZGF0ZUZpZWxkIH0gZnJvbSAidnVleC1tYXAtZmllbGRzIjsKaW1wb3J0IHsgZGIgfSBmcm9tICIuLi8uLi9maXJlYmFzZS9kYiI7CmltcG9ydCB7IGdldElkRnJvbVVSTCB9IGZyb20gInZ1ZS15b3V0dWJlLWVtYmVkIjsKdmFyIHJlc291cmNlc1JlZiA9IGRiLmNvbGxlY3Rpb24oInJlc291cmNlcyIpOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogewogICAgdmlkZW9zOiBbXSwKICAgIGFydGljbGVzOiBbXSwKICAgIHZpZGVvSUQ6IG51bGwsCiAgICB2aWRlb1VSTDogbnVsbCwKICAgIGNvbnRlbnRJRDogbnVsbCwKICAgIGN1cnJlbnRWaWRlb1Jlc291cmNlOiB7CiAgICAgIHBhcmVudElEOiAiIiwKICAgICAgcGFyZW50VHlwZTogIiIsCiAgICAgIHJlc291cmNlVHlwZTogIiIsCiAgICAgIHVybDogIiIsCiAgICAgIHRpdGxlOiAiIiwKICAgICAgdG9waWNJRDogW10sCiAgICAgIHNlYXJjaEFycmF5OiBbXQogICAgfQogIH0sCiAgZ2V0dGVyczogewogICAgZ2V0RmllbGQ6IGdldEZpZWxkLAogICAgY3VycmVudFZpZGVvczogZnVuY3Rpb24gY3VycmVudFZpZGVvcyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUudmlkZW9zOwogICAgfSwKICAgIGN1cnJlbnRBcnRpY2xlczogZnVuY3Rpb24gY3VycmVudEFydGljbGVzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5hcnRpY2xlczsKICAgIH0sCiAgICBjdXJyZW50VmlkZW9VUkw6IGZ1bmN0aW9uIGN1cnJlbnRWaWRlb1VSTChzdGF0ZSkgewogICAgICByZXR1cm4gZ2V0SWRGcm9tVVJMKHN0YXRlLnZpZGVvVVJMKTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGJpbmRUb3BpY3M6IGZpcmVzdG9yZUFjdGlvbihmdW5jdGlvbiAoX3JlZikgewogICAgICB2YXIgYmluZEZpcmVzdG9yZVJlZiA9IF9yZWYuYmluZEZpcmVzdG9yZVJlZjsKICAgICAgLy8gcmV0dXJuIHRoZSBwcm9taXNlIHJldHVybmVkIGJ5IGBiaW5kRmlyZXN0b3JlUmVmYAogICAgICByZXR1cm4gYmluZEZpcmVzdG9yZVJlZigicmVzb3VyY2VzIiwgZGIuY29sbGVjdGlvbigicmVzb3VyY2VzIikpOwogICAgfSksCiAgICAvLyogZmV0Y2hlcyBhbGwgdmlkZW9zIHVuZGVyIHRvcGljcwogICAgZmV0Y2hWaWRlb3M6IGZ1bmN0aW9uIGZldGNoVmlkZW9zKF9yZWYyLCBwYXJlbnRUeXBlKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBjb21taXQsIHN0YXRlLCByb290U3RhdGUsIHZpZGVvTGlzdDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0LCBzdGF0ZSA9IF9yZWYyLnN0YXRlLCByb290U3RhdGUgPSBfcmVmMi5yb290U3RhdGU7CiAgICAgICAgICAgICAgICB2aWRlb0xpc3QgPSBbXTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiByZXNvdXJjZXNSZWYud2hlcmUoInRvcGljSUQiLCAiYXJyYXktY29udGFpbnMtYW55IiwgW3Jvb3RTdGF0ZS50b3BpY3MudG9waWNJRF0pLndoZXJlKCJwYXJlbnRUeXBlIiwgIj09IiwgcGFyZW50VHlwZSkud2hlcmUoInJlc291cmNlVHlwZSIsICI9PSIsICJ2aWRlbyIpLmdldCgpLnRoZW4oIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIHZhciBfcmVmMyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShxdWVyeVNuYXBzaG90KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnlTbmFwc2hvdC5kb2NzLm1hcChmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB2aWRlb0l0ZW0gPSBkb2MuZGF0YSgpOyAvLyogYXBwZW5kcyB1bmlxdWUgdmlkZW8gaWQgdG8gZWFjaCB3b3JrCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyogYXBwZW5kcyB1bmlxdWUgdmlkZW8gaWQgdG8gZWFjaCB3b3JrCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZGVvTGlzdC5wdXNoKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdmlkZW9JdGVtKSwge30sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogZG9jLmlkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29tbWl0KCJTRVRfVklERU9TIiwgdmlkZW9MaXN0KTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIH0oKSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHN0YXRlLnZpZGVvcyk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vKiBmZXRjaGVzIGFsbCB2aWRlbyByZXNvdXJjZXMgdW5kZXIgdG9waWMgY29udGVudHMKICAgIGZldGNoQ29udGVudFZpZGVvczogZnVuY3Rpb24gZmV0Y2hDb250ZW50VmlkZW9zKF9yZWY0LCBwYXJlbnRUeXBlKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBjb21taXQsIHJvb3RTdGF0ZSwgcmVhZFBhcmVudElELCBwYXJlbnRJRCwgdmlkZW9zOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNC5jb21taXQsIHJvb3RTdGF0ZSA9IF9yZWY0LnJvb3RTdGF0ZTsKCiAgICAgICAgICAgICAgICByZWFkUGFyZW50SUQgPSBmdW5jdGlvbiByZWFkUGFyZW50SUQocGFyZW50VHlwZSkgewogICAgICAgICAgICAgICAgICBpZiAocGFyZW50VHlwZSA9PSAiZXZlbnQiKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJvb3RTdGF0ZS5ldmVudHMuZXZlbnRJZDsKICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwYXJlbnRUeXBlID09ICJwZW9wbGUiKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJvb3RTdGF0ZS5wZW9wbGUucGVyc29uSWQ7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlYWRQYXJlbnRJRChwYXJlbnRUeXBlKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcGFyZW50SUQgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIHZpZGVvcyA9IFtdOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA4OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc291cmNlc1JlZi53aGVyZSgicGFyZW50SUQiLCAiPT0iLCBwYXJlbnRJRCkud2hlcmUoInBhcmVudFR5cGUiLCAiPT0iLCBwYXJlbnRUeXBlKS53aGVyZSgicmVzb3VyY2VUeXBlIiwgIj09IiwgInZpZGVvIikuZ2V0KCkudGhlbihmdW5jdGlvbiAocXVlcnlTbmFwc2hvdCkgewogICAgICAgICAgICAgICAgICBxdWVyeVNuYXBzaG90LmRvY3MubWFwKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgdmlkZW9JdGVtID0gZG9jLmRhdGEoKTsKICAgICAgICAgICAgICAgICAgICB2aWRlb3MucHVzaChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHZpZGVvSXRlbSksIHt9LCB7CiAgICAgICAgICAgICAgICAgICAgICBpZDogZG9jLmlkCiAgICAgICAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgcmV0dXJuIGNvbW1pdCgiU0VUX1ZJREVPUyIsIHZpZGVvcyk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhwYXJlbnRJRCk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyogY2xlYXJzIHZpZGVvIHJlc291cmNlIGZvcm0KICAgIGNsZWFyVmlkZW9Gb3JtOiBmdW5jdGlvbiBjbGVhclZpZGVvRm9ybShfcmVmNSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjUuY29tbWl0LAogICAgICAgICAgc3RhdGUgPSBfcmVmNS5zdGF0ZTsKICAgICAgY29tbWl0KCJTRVRfQ1VSUkVOVF9WSURFT19SRVNPVVJDRSIsIHsKICAgICAgICBwYXJlbnRJRDogIiIsCiAgICAgICAgcGFyZW50VHlwZTogIiIsCiAgICAgICAgcmVzb3VyY2VUeXBlOiAidmlkZW8iLAogICAgICAgIHVybDogIiIsCiAgICAgICAgdGl0bGU6ICIiLAogICAgICAgIHRvcGljSUQ6IFtdLAogICAgICAgIHNlYXJjaEFycmF5OiBbXQogICAgICB9KTsKICAgICAgY29tbWl0KCJTRVRfWU9VVFVCRV9JRCIsICIiKTsKICAgICAgY29uc29sZS5sb2coc3RhdGUuY3VycmVudFZpZGVvUmVzb3VyY2UpOwogICAgfSwKICAgIC8vKiBoYW5kbGVzIHN1Ym1pdCB2aWRlbyByZXNvdXJjZQogICAgc3VibWl0TmV3VmlkZW86IGZ1bmN0aW9uIHN1Ym1pdE5ld1ZpZGVvKF9yZWY2LCBwYXJlbnRUeXBlKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICAgIHZhciBzdGF0ZSwgY29tbWl0LCBkaXNwYXRjaCwgcm9vdFN0YXRlLCB1cmwsIHJlYWRQYXJlbnRJRCwgcGFyZW50SUQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHN0YXRlID0gX3JlZjYuc3RhdGUsIGNvbW1pdCA9IF9yZWY2LmNvbW1pdCwgZGlzcGF0Y2ggPSBfcmVmNi5kaXNwYXRjaCwgcm9vdFN0YXRlID0gX3JlZjYucm9vdFN0YXRlOwogICAgICAgICAgICAgICAgdXJsID0gZ2V0SWRGcm9tVVJMKHN0YXRlLnZpZGVvVVJMKTsKICAgICAgICAgICAgICAgIGNvbW1pdCgiU0VUX1lPVVRVQkVfVVJMIiwgdXJsKTsgLy8qIHNldHMgcGFyZW50SUQKCiAgICAgICAgICAgICAgICByZWFkUGFyZW50SUQgPSBmdW5jdGlvbiByZWFkUGFyZW50SUQocGFyZW50VHlwZSkgewogICAgICAgICAgICAgICAgICBpZiAocGFyZW50VHlwZSA9PSAiZXZlbnQiKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJvb3RTdGF0ZS5ldmVudHMuZXZlbnRJZDsKICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwYXJlbnRUeXBlID09ICJwZW9wbGUiKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJvb3RTdGF0ZS5wZW9wbGUucGVyc29uSWQ7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocGFyZW50VHlwZSA9PSAidG9waWMiKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJvb3RTdGF0ZS50b3BpY3MudG9waWNJRDsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfTsKCiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVhZFBhcmVudElEKHBhcmVudFR5cGUpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICBwYXJlbnRJRCA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgICAgY29tbWl0KCJTRVRfVklERU9fUFJPUFMiLCB7CiAgICAgICAgICAgICAgICAgIHBhcmVudElEOiBwYXJlbnRJRCwKICAgICAgICAgICAgICAgICAgcGFyZW50VHlwZTogcGFyZW50VHlwZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBjb21taXQoIlNFVF9WSURFT19UT1BJQ19JRCIsIHJvb3RTdGF0ZS50b3BpY3MudG9waWNJRCk7CiAgICAgICAgICAgICAgICBjb21taXQoIlNFVF9TRUFSQ0hfQVJSQVkiLCBzdGF0ZS5jdXJyZW50VmlkZW9SZXNvdXJjZS50aXRsZSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzdGF0ZS5jdXJyZW50VmlkZW9SZXNvdXJjZSk7IC8vKiBhZGRzIG5ldyB2aWRlbyB0byBmaXJlc3RvcmUKCiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDEzOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc291cmNlc1JlZi5hZGQoc3RhdGUuY3VycmVudFZpZGVvUmVzb3VyY2UpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiU3VibWl0dGVkIFZpZGVvIFJlc291cmNlIik7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICAgIGRpc3BhdGNoKCJjbGVhclZpZGVvRm9ybSIpOwogICAgICAgICAgICAgICAgYWxlcnQoIlN1Ym1pdHRlZCBWaWRlbyBSZXNvdXJjZSIpOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8qIHNldHMgY3VycmVudCB2aWRlbyBmb3IgZWRpdAogICAgZWRpdFZpZGVvOiBmdW5jdGlvbiBlZGl0VmlkZW8oX3JlZjcsIHZpZGVvKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmNy5jb21taXQsCiAgICAgICAgICBzdGF0ZSA9IF9yZWY3LnN0YXRlOwogICAgICBjb21taXQoIlNFVF9WSURFT19JRCIsIHZpZGVvLmlkKTsgLy8qIHJldHVybnMgdGhlIGluZGV4IG9mIHRoZSB2aWRlbyBmb3IgZWRpdAoKICAgICAgdmFyIGluZGV4ID0gc3RhdGUudmlkZW9zLmZpbmRJbmRleChmdW5jdGlvbiAoZSkgewogICAgICAgIHJldHVybiBlLmlkID09IHZpZGVvLmlkOwogICAgICB9KTsgLy8qIGlkZW50aWZpZXMgdGhlIGN1cnJlbnQgdmlkZW8gZm9yIGVkaXQgdXNpbmcgaW5kZXgKCiAgICAgIHZhciBjdXJyZW50VmlkZW8gPSBzdGF0ZS52aWRlb3NbaW5kZXhdOwogICAgICBjb21taXQoIlNFVF9DVVJSRU5UX1ZJREVPX1JFU09VUkNFIiwgY3VycmVudFZpZGVvKTsKICAgICAgY29tbWl0KCJTRVRfWU9VVFVCRV9JRCIsIGN1cnJlbnRWaWRlby51cmwpOwogICAgfSwKICAgIC8vKiBzdWJtaXQgZWRpdCB2aWRlbwogICAgc3VibWl0RWRpdFZpZGVvOiBmdW5jdGlvbiBzdWJtaXRFZGl0VmlkZW8oX3JlZjgpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUoKSB7CiAgICAgICAgdmFyIHN0YXRlLCBkaXNwYXRjaCwgY29tbWl0LCB1cmw7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU1JChfY29udGV4dDUpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHN0YXRlID0gX3JlZjguc3RhdGUsIGRpc3BhdGNoID0gX3JlZjguZGlzcGF0Y2gsIGNvbW1pdCA9IF9yZWY4LmNvbW1pdDsKICAgICAgICAgICAgICAgIHVybCA9IGdldElkRnJvbVVSTChzdGF0ZS52aWRlb1VSTCk7CiAgICAgICAgICAgICAgICBjb21taXQoIlNFVF9ZT1VUVUJFX1VSTCIsIHVybCk7CiAgICAgICAgICAgICAgICBjb21taXQoIlVQREFURV9TRUFSQ0hfQVJSQVkiLCBzdGF0ZS5jdXJyZW50VmlkZW9SZXNvdXJjZS50aXRsZSk7CiAgICAgICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzb3VyY2VzUmVmLmRvYyhzdGF0ZS52aWRlb0lEKS5zZXQoc3RhdGUuY3VycmVudFZpZGVvUmVzb3VyY2UsIHsKICAgICAgICAgICAgICAgICAgbWVyZ2U6IHRydWUKICAgICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiU3VibWl0IEVkaXQgZm9yICIgKyBzdGF0ZS5jdXJyZW50VmlkZW9SZXNvdXJjZS50aXRsZSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgZGlzcGF0Y2goImNsZWFyVmlkZW9Gb3JtIik7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vKiBkZWxldGUgdmlkZW8KICAgIGRlbGV0ZVZpZGVvOiBmdW5jdGlvbiBkZWxldGVWaWRlbyhfcmVmOSwgdmlkZW8pIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTYoKSB7CiAgICAgICAgdmFyIHN0YXRlLCBjb21taXQsIGRpc3BhdGNoOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNiQoX2NvbnRleHQ2KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ni5wcmV2ID0gX2NvbnRleHQ2Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWY5LnN0YXRlLCBjb21taXQgPSBfcmVmOS5jb21taXQsIGRpc3BhdGNoID0gX3JlZjkuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBfY29udGV4dDYubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gY29tbWl0KCJTRVRfVklERU9fSUQiLCB2aWRlby5pZCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiByZXNvdXJjZXNSZWYuZG9jKHN0YXRlLnZpZGVvSUQpLmRlbGV0ZSgpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiU3VjY2Vzc2Z1bGx5IGRlbGV0ZWQiKTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBjb21taXQoIlNFVF9WSURFT19JRCIsIG51bGwpOwogICAgICAgICAgICAgICAgZGlzcGF0Y2goImNsZWFyVmlkZW9Gb3JtIik7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNik7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHZ1ZXhmaXJlTXV0YXRpb25zKSwge30sIHsKICAgIHVwZGF0ZUZpZWxkOiB1cGRhdGVGaWVsZCwKICAgIFNFVF9WSURFT1M6IGZ1bmN0aW9uIFNFVF9WSURFT1Moc3RhdGUsIHZpZGVvcykgewogICAgICByZXR1cm4gc3RhdGUudmlkZW9zID0gdmlkZW9zOwogICAgfSwKICAgIFNFVF9WSURFT19JRDogZnVuY3Rpb24gU0VUX1ZJREVPX0lEKHN0YXRlLCBpZCkgewogICAgICByZXR1cm4gc3RhdGUudmlkZW9JRCA9IGlkOwogICAgfSwKICAgIFNFVF9ZT1VUVUJFX1VSTDogZnVuY3Rpb24gU0VUX1lPVVRVQkVfVVJMKHN0YXRlLCB1cmwpIHsKICAgICAgcmV0dXJuIHN0YXRlLmN1cnJlbnRWaWRlb1Jlc291cmNlLnVybCA9IHVybDsKICAgIH0sCiAgICBTRVRfWU9VVFVCRV9JRDogZnVuY3Rpb24gU0VUX1lPVVRVQkVfSUQoc3RhdGUsIGlkKSB7CiAgICAgIHJldHVybiBzdGF0ZS52aWRlb1VSTCA9IGlkOwogICAgfSwKICAgIFNFVF9WSURFT19QUk9QUzogZnVuY3Rpb24gU0VUX1ZJREVPX1BST1BTKHN0YXRlLCBwcm9wcykgewogICAgICByZXR1cm4gc3RhdGUuY3VycmVudFZpZGVvUmVzb3VyY2UgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHN0YXRlLmN1cnJlbnRWaWRlb1Jlc291cmNlKSwgcHJvcHMpOwogICAgfSwKICAgIFNFVF9WSURFT19UT1BJQ19JRDogZnVuY3Rpb24gU0VUX1ZJREVPX1RPUElDX0lEKHN0YXRlLCBpZCkgewogICAgICBzdGF0ZS5jdXJyZW50VmlkZW9SZXNvdXJjZS50b3BpY0lELnB1c2goaWQpOwogICAgfSwKICAgIFNFVF9TRUFSQ0hfQVJSQVk6IGZ1bmN0aW9uIFNFVF9TRUFSQ0hfQVJSQVkoc3RhdGUsIGFycmF5KSB7CiAgICAgIHZhciBfc3RhdGUkY3VycmVudFZpZGVvUmU7CgogICAgICAvLyogc3BsaXRzIHRoZSB3b3JkcyBpbnRvIHN0cmluZ3MgYW5kIHN0b3JlcyBpbiBuZXdBcnJheQogICAgICB2YXIgbmV3QXJyYXkgPSBhcnJheS5zcGxpdCgiICIpOwoKICAgICAgKF9zdGF0ZSRjdXJyZW50VmlkZW9SZSA9IHN0YXRlLmN1cnJlbnRWaWRlb1Jlc291cmNlLnNlYXJjaEFycmF5KS5wdXNoLmFwcGx5KF9zdGF0ZSRjdXJyZW50VmlkZW9SZSwgX3RvQ29uc3VtYWJsZUFycmF5KG5ld0FycmF5KSk7CiAgICB9LAogICAgU0VUX0NVUlJFTlRfVklERU9fUkVTT1VSQ0U6IGZ1bmN0aW9uIFNFVF9DVVJSRU5UX1ZJREVPX1JFU09VUkNFKHN0YXRlLCBmaWVsZHMpIHsKICAgICAgcmV0dXJuIHN0YXRlLmN1cnJlbnRWaWRlb1Jlc291cmNlID0gZmllbGRzOwogICAgfSwKICAgIFVQREFURV9TRUFSQ0hfQVJSQVk6IGZ1bmN0aW9uIFVQREFURV9TRUFSQ0hfQVJSQVkoc3RhdGUsIGFycmF5KSB7CiAgICAgIHZhciBuZXdBcnJheSA9IGFycmF5LnNwbGl0KCIgIik7CiAgICAgIHN0YXRlLmN1cnJlbnRWaWRlb1Jlc291cmNlLnNlYXJjaEFycmF5ID0gbmV3QXJyYXk7CiAgICB9CiAgfSkKfTs="},{"version":3,"sources":["/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/store/modules/videos.js"],"names":["vuexfireMutations","firestoreAction","getField","updateField","db","getIdFromURL","resourcesRef","collection","namespaced","state","videos","articles","videoID","videoURL","contentID","currentVideoResource","parentID","parentType","resourceType","url","title","topicID","searchArray","getters","currentVideos","currentArticles","currentVideoURL","actions","bindTopics","bindFirestoreRef","fetchVideos","commit","rootState","videoList","where","topics","get","then","querySnapshot","docs","map","doc","videoItem","data","push","id","console","log","fetchContentVideos","readParentID","events","eventId","people","personId","clearVideoForm","submitNewVideo","dispatch","add","alert","editVideo","video","index","findIndex","e","currentVideo","submitEditVideo","set","merge","deleteVideo","delete","mutations","SET_VIDEOS","SET_VIDEO_ID","SET_YOUTUBE_URL","SET_YOUTUBE_ID","SET_VIDEO_PROPS","props","SET_VIDEO_TOPIC_ID","SET_SEARCH_ARRAY","array","newArray","split","SET_CURRENT_VIDEO_RESOURCE","fields","UPDATE_SEARCH_ARRAY"],"mappings":"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","sourcesContent":["import { vuexfireMutations, firestoreAction } from \"vuexfire\";\nimport { getField, updateField } from \"vuex-map-fields\";\nimport { db } from \"../../firebase/db\";\nimport { getIdFromURL } from \"vue-youtube-embed\";\n\nconst resourcesRef = db.collection(\"resources\");\n\nexport default {\n  namespaced: true,\n  state: {\n    videos: [],\n    articles: [],\n    videoID: null,\n    videoURL: null,\n    contentID: null,\n    currentVideoResource: {\n      parentID: \"\",\n      parentType: \"\",\n      resourceType: \"\",\n      url: \"\",\n      title: \"\",\n      topicID: [],\n      searchArray: [],\n    },\n  },\n  getters: {\n    getField,\n    currentVideos: (state) => state.videos,\n    currentArticles: (state) => state.articles,\n    currentVideoURL: (state) => getIdFromURL(state.videoURL),\n  },\n  actions: {\n    bindTopics: firestoreAction(({ bindFirestoreRef }) => {\n      // return the promise returned by `bindFirestoreRef`\n      return bindFirestoreRef(\"resources\", db.collection(\"resources\"));\n    }),\n\n    //* fetches all videos under topics\n    async fetchVideos({ commit, state, rootState }, parentType) {\n      let videoList = [];\n\n      await resourcesRef\n        .where(\"topicID\", \"array-contains-any\", [rootState.topics.topicID])\n        .where(\"parentType\", \"==\", parentType)\n        .where(\"resourceType\", \"==\", \"video\")\n        .get()\n        .then(async (querySnapshot) => {\n          querySnapshot.docs.map((doc) => {\n            let videoItem = doc.data();\n\n            //* appends unique video id to each work\n            videoList.push({\n              ...videoItem,\n              id: doc.id,\n            });\n          });\n          await commit(\"SET_VIDEOS\", videoList);\n        });\n      console.log(state.videos);\n    },\n\n    //* fetches all video resources under topic contents\n    async fetchContentVideos({ commit, rootState }, parentType) {\n      const readParentID = (parentType) => {\n        if (parentType == \"event\") {\n          return rootState.events.eventId;\n        } else if (parentType == \"people\") {\n          return rootState.people.personId;\n        }\n      };\n      let parentID = await readParentID(parentType);\n      let videos = [];\n      await resourcesRef\n        .where(\"parentID\", \"==\", parentID)\n        .where(\"parentType\", \"==\", parentType)\n        .where(\"resourceType\", \"==\", \"video\")\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.docs.map((doc) => {\n            let videoItem = doc.data();\n            videos.push({\n              ...videoItem,\n              id: doc.id,\n            });\n          });\n        });\n      await commit(\"SET_VIDEOS\", videos);\n      console.log(parentID);\n    },\n\n    //* clears video resource form\n    clearVideoForm({ commit, state }) {\n      commit(\"SET_CURRENT_VIDEO_RESOURCE\", {\n        parentID: \"\",\n        parentType: \"\",\n        resourceType: \"video\",\n        url: \"\",\n        title: \"\",\n        topicID: [],\n        searchArray: [],\n      });\n      commit(\"SET_YOUTUBE_ID\", \"\");\n      console.log(state.currentVideoResource);\n    },\n\n    //* handles submit video resource\n    async submitNewVideo({ state, commit, dispatch, rootState }, parentType) {\n      let url = getIdFromURL(state.videoURL);\n      commit(\"SET_YOUTUBE_URL\", url);\n\n      //* sets parentID\n      const readParentID = (parentType) => {\n        if (parentType == \"event\") {\n          return rootState.events.eventId;\n        } else if (parentType == \"people\") {\n          return rootState.people.personId;\n        } else if (parentType == \"topic\") {\n          return rootState.topics.topicID;\n        }\n      };\n      let parentID = await readParentID(parentType);\n      commit(\"SET_VIDEO_PROPS\", {\n        parentID: parentID,\n        parentType: parentType,\n      });\n      commit(\"SET_VIDEO_TOPIC_ID\", rootState.topics.topicID);\n      commit(\"SET_SEARCH_ARRAY\", state.currentVideoResource.title);\n\n      console.log(state.currentVideoResource);\n\n      //* adds new video to firestore\n      await resourcesRef.add(state.currentVideoResource).then(() => {\n        console.log(\"Submitted Video Resource\");\n      });\n      dispatch(\"clearVideoForm\");\n      alert(\"Submitted Video Resource\");\n    },\n\n    //* sets current video for edit\n    editVideo({ commit, state }, video) {\n      commit(\"SET_VIDEO_ID\", video.id);\n\n      //* returns the index of the video for edit\n      let index = state.videos.findIndex((e) => e.id == video.id);\n\n      //* identifies the current video for edit using index\n      let currentVideo = state.videos[index];\n      commit(\"SET_CURRENT_VIDEO_RESOURCE\", currentVideo);\n      commit(\"SET_YOUTUBE_ID\", currentVideo.url);\n    },\n\n    //* submit edit video\n    async submitEditVideo({ state, dispatch, commit }) {\n      let url = getIdFromURL(state.videoURL);\n      commit(\"SET_YOUTUBE_URL\", url);\n      commit(\"UPDATE_SEARCH_ARRAY\", state.currentVideoResource.title);\n      await resourcesRef\n        .doc(state.videoID)\n        .set(state.currentVideoResource, { merge: true })\n        .then(() => {\n          console.log(\"Submit Edit for \" + state.currentVideoResource.title);\n        });\n      dispatch(\"clearVideoForm\");\n    },\n\n    //* delete video\n    async deleteVideo({ state, commit, dispatch }, video) {\n      await commit(\"SET_VIDEO_ID\", video.id);\n      await resourcesRef\n        .doc(state.videoID)\n        .delete()\n        .then(() => {\n          console.log(\"Successfully deleted\");\n        });\n      commit(\"SET_VIDEO_ID\", null);\n      dispatch(\"clearVideoForm\");\n    },\n  },\n  mutations: {\n    ...vuexfireMutations,\n    updateField,\n    SET_VIDEOS: (state, videos) => (state.videos = videos),\n    SET_VIDEO_ID: (state, id) => (state.videoID = id),\n    SET_YOUTUBE_URL: (state, url) => (state.currentVideoResource.url = url),\n    SET_YOUTUBE_ID: (state, id) => (state.videoURL = id),\n    SET_VIDEO_PROPS: (state, props) =>\n      (state.currentVideoResource = {\n        ...state.currentVideoResource,\n        ...props,\n      }),\n    SET_VIDEO_TOPIC_ID: (state, id) => {\n      state.currentVideoResource.topicID.push(id);\n    },\n    SET_SEARCH_ARRAY: (state, array) => {\n      //* splits the words into strings and stores in newArray\n      let newArray = array.split(\" \");\n      state.currentVideoResource.searchArray.push(...newArray);\n    },\n    SET_CURRENT_VIDEO_RESOURCE: (state, fields) =>\n      (state.currentVideoResource = fields),\n    UPDATE_SEARCH_ARRAY: (state, array) => {\n      let newArray = array.split(\" \");\n      state.currentVideoResource.searchArray = newArray;\n    },\n  },\n};\n"]}]}