{"remainingRequest":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/babel-loader/lib/index.js!/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/store/modules/events.js","dependencies":[{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/store/modules/events.js","mtime":1640941263906},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/cache-loader/dist/cjs.js","mtime":1640582283784},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/babel-loader/lib/index.js","mtime":1640582283745},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/eslint-loader/index.js","mtime":1640582288508}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/store/modules/events.js"],"names":["vuexfireMutations","firestoreAction","getField","updateField","db","router","eventsRef","collection","namespaced","state","topicId","events","eventId","currentEvent","title","startDate","date","era","endDate","descriptionMD","mainMD","thumbURL","thumbFile","imageData","theme","searchArray","topicID","coordinates","map","eventVideos","eventArticles","getters","currentTopicEvents","currentEventId","currentEventVideos","currentEventArticles","actions","bindEvents","bindFirestoreRef","where","setEventTopicId","rootState","commit","console","log","topics","fetchEventsHandler","dispatch","fetchEventsList","eventsList","get","then","querySnapshot","docs","doc","eventItem","data","push","id","addEventForm","fields","name","path","submitNewEvent","add","submitEditEvent","set","merge","clearEventId","closeForm","editEvent","event","index","findIndex","e","deleteEvent","delete","handleSave","mutations","SET_TOPIC_ID","SET_TOPIC_EVENTS","SET_EVENT_ID","SET_EVENT_TOPIC_ID","SET_EVENT_VIDEOS","videos","SET_EVENT_ARTICLES","articles","SET_CURRENT_EVENT","CLEAR_EVENT_ID","SET_SEARCH_ARRAY","array","newArray","split","UPDATE_SEARCH_ARRAY"],"mappings":"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","sourcesContent":["import { vuexfireMutations, firestoreAction } from \"vuexfire\";\nimport { getField, updateField } from \"vuex-map-fields\";\nimport { db } from \"../../firebase/db\";\nimport router from \"../../router\";\n\nconst eventsRef = db.collection(\"events\");\n\nexport default {\n  namespaced: true,\n  state: {\n    topicId: null,\n    events: [],\n    eventId: null,\n    currentEvent: {\n      title: \"\",\n      startDate: {\n        date: \"\",\n        era: true,\n      },\n      endDate: {\n        date: \"\",\n        era: true,\n      },\n      descriptionMD: \"\",\n      mainMD: \"\",\n      thumbURL: \"\",\n      thumbFile: \"\",\n      imageData: \"\",\n      theme: [],\n      searchArray: [],\n      topicID: [],\n      coordinates: { map: [] },\n    },\n    eventVideos: [],\n    eventArticles: [],\n  },\n\n  getters: {\n    // currentTopicContents: (state) => state.id,\n    currentTopicEvents: (state) => state.events,\n    currentEvent: (state) => state.currentEvent,\n    currentEventId: (state) => state.eventId,\n    currentEventVideos: (state) => state.eventVideos,\n    currentEventArticles: (state) => state.eventArticles,\n    getField,\n  },\n\n  actions: {\n    bindEvents: firestoreAction(({ bindFirestoreRef, state }) => {\n      // return the promise returned by `bindFirestoreRef`\n      return bindFirestoreRef(\n        \"events\",\n        db\n          .collection(\"events\")\n          .where(\"topicID\", \"array-contains-any\", [state.topicId])\n      );\n    }),\n\n    //* set topicId to track current topic contents\n    setEventTopicId({ rootState, state, commit }) {\n      console.log(rootState.topics.topicID);\n      commit(\"SET_EVENT_TOPIC_ID\", rootState.topics.topicID);\n      console.log(state.currentEvent.topicID);\n    },\n\n    //* fetch all events under current topic id\n    async fetchEventsHandler({ commit, rootState, dispatch }) {\n      await commit(\"SET_TOPIC_ID\", rootState.topics.topicID);\n      await dispatch(\"fetchEventsList\");\n    },\n\n    //* fetches the list of all events under one topic\n    async fetchEventsList({ commit, rootState }) {\n      let eventsList = [];\n      await eventsRef\n        .where(\"topicID\", \"array-contains-any\", [rootState.topics.topicID])\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.docs.map((doc) => {\n            let eventItem = doc.data();\n\n            //* appends unique event id to each event\n            eventsList.push({\n              ...eventItem,\n              id: doc.id,\n            });\n          });\n          commit(\"SET_TOPIC_EVENTS\", eventsList);\n        });\n      // console.log(state.topicId);\n    },\n\n    //* handler for add event button, clears the fields\n    async addEventForm({ state, dispatch, commit }) {\n      const fields = {\n        title: \"\",\n        startDate: {\n          date: \"\",\n          era: true,\n        },\n        endDate: {\n          date: \"\",\n          era: true,\n        },\n        descriptionMD: \"\",\n        mainMD: \"\",\n        thumbURL: \"\",\n        thumbFile: \"\",\n        imageData: \"\",\n        theme: [],\n        searchArray: [],\n        topicID: [],\n        coordinates: [[]],\n      };\n      await commit(\"SET_CURRENT_EVENT\", fields);\n      await dispatch(\"clearEventId\");\n      router.push({ name: \"EventGeneral\", path: \"/events/general\" });\n      console.log(state.eventId);\n    },\n\n    //* handles submit new event data\n    async submitNewEvent({ state, dispatch, rootState, commit }) {\n      await dispatch(\"setEventTopicId\");\n      await commit(\"SET_SEARCH_ARRAY\", state.currentEvent.title);\n      console.log(\"state\", state.currentEvent);\n      await eventsRef.add(state.currentEvent).then(() => {\n        console.log(\"Event Added\");\n      });\n      dispatch(\"closeForm\", \"Events\", \"/events\");\n      console.log(rootState.topics.topicID);\n    },\n    //* handles submit for edit event\n    async submitEditEvent({ state, dispatch, commit }) {\n      await commit(\"UPDATE_SEARCH_ARRAY\", state.currentEvent.title);\n      await eventsRef\n        .doc(state.eventId)\n        .set(state.currentEvent, { merge: true })\n        .then(() => {\n          console.log(\"Submit Edit\" + state.currentEvent);\n        });\n      dispatch(\"closeForm\", \"Events\", \"/events\");\n    },\n    //* clears the current eventId\n    clearEventId({ commit }) {\n      commit(\"CLEAR_EVENT_ID\", null);\n    },\n\n    //* handles the close button of a form\n    async closeForm({ state, dispatch }, name, path) {\n      await dispatch(\"clearEventId\");\n      router.push({ name: name, path: path });\n      console.log(state.eventId);\n    },\n\n    //* set current event for edit\n    async editEvent({ state, commit }, event) {\n      await commit(\"SET_EVENT_ID\", event.id);\n\n      //* sets the index of the event for edit\n      let index = state.events.findIndex((e) => e.id == event.id);\n\n      //* identifies the current event for edit\n      let currentEvent = state.events[index];\n\n      await commit(\"SET_CURRENT_EVENT\", currentEvent);\n      // await dispatch(\"getEvent\");\n    },\n\n    //* deletes the event from the database\n    async deleteEvent({ commit, state, dispatch }, event) {\n      await commit(\"SET_EVENT_ID\", event.id);\n      eventsRef\n        .doc(state.eventId)\n        .delete()\n        .then(() => {\n          console.log(\"Deleted Event\");\n        });\n      dispatch(\"fetchEventsList\");\n    },\n\n    //* dynamic save button\n    handleSave({ state, dispatch }) {\n      if (state.eventId != null) {\n        //* handles the submit as an edit if editing an event\n        dispatch(\"submitEditEvent\");\n      } else {\n        //* handles the submit as a new event if adding an event\n        dispatch(\"submitNewEvent\");\n      }\n    },\n  },\n\n  mutations: {\n    ...vuexfireMutations,\n    // setId: (state, id) => (state.id = id),\n    SET_TOPIC_ID: (state, topicId) => (state.topicId = topicId),\n    SET_TOPIC_EVENTS: (state, events) => (state.events = events),\n    SET_EVENT_ID: (state, eventId) => (state.eventId = eventId),\n    SET_EVENT_TOPIC_ID: (state, topicId) => {\n      state.currentEvent.topicID.push(topicId);\n    },\n    SET_EVENT_VIDEOS: (state, videos) => (state.eventVideos = videos),\n    SET_EVENT_ARTICLES: (state, articles) => (state.eventArticles = articles),\n    SET_CURRENT_EVENT: (state, event) => (state.currentEvent = event),\n    CLEAR_EVENT_ID: (state, id) => (state.eventId = id),\n    SET_SEARCH_ARRAY: (state, array) => {\n      //* splits the words into strings and stores in newArray\n      let newArray = array.split(\" \");\n      state.currentEvent.searchArray.push(...newArray);\n    },\n    UPDATE_SEARCH_ARRAY: (state, array) => {\n      let newArray = array.split(\" \");\n      state.currentEvent.searchArray = newArray;\n    },\n    // SET_NEW_EVENT: (state, currentEvent) =>\n    updateField,\n  },\n};\n"]}]}