{"remainingRequest":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/babel-loader/lib/index.js!/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/eslint-loader/index.js??ref--13-0!/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/src/store/modules/events.js","dependencies":[{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/src/store/modules/events.js","mtime":1619035938740},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/cache-loader/dist/cjs.js","mtime":1618025539709},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/babel-loader/lib/index.js","mtime":1618025539271},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/eslint-loader/index.js","mtime":1618025559964}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/src/store/modules/events.js"],"names":["vuexfireMutations","firestoreAction","getField","updateField","db","router","eventsRef","collection","namespaced","state","topicId","events","eventId","currentEvent","title","startDate","date","era","endDate","descriptionMD","mainMD","thumbURL","thumbFile","theme","searchArray","topicID","eventVideos","eventArticles","getters","currentTopicEvents","currentEventId","currentEventVideos","currentEventArticles","actions","bindEvents","bindFirestoreRef","where","setEventTopicId","rootState","commit","console","log","topics","fetchEventsHandler","dispatch","fetchEventsList","eventsList","get","then","querySnapshot","docs","map","doc","eventItem","data","push","id","addEventForm","fields","name","path","submitNewEvent","add","clearEventId","closeForm","editEvent","event","index","findIndex","e","submitEditEvent","set","merge","deleteEvent","delete","handleSave","mutations","SET_TOPIC_ID","SET_TOPIC_EVENTS","SET_EVENT_ID","SET_EVENT_TOPIC_ID","SET_EVENT_VIDEOS","videos","SET_EVENT_ARTICLES","articles","SET_CURRENT_EVENT","CLEAR_EVENT_ID","SET_SEARCH_ARRAY","array","newArray","split","UPDATE_SEARCH_ARRAY"],"mappings":"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","sourcesContent":["import { vuexfireMutations, firestoreAction } from \"vuexfire\";\nimport { getField, updateField } from \"vuex-map-fields\";\nimport { db } from \"../../firebase/db\";\nimport router from \"../../router\";\n\nconst eventsRef = db.collection(\"events\");\n\nexport default {\n  namespaced: true,\n  state: {\n    topicId: null,\n    events: [],\n    eventId: null,\n    currentEvent: {\n      title: \"\",\n      startDate: {\n        date: \"\",\n        era: true,\n      },\n      endDate: {\n        date: \"\",\n        era: true,\n      },\n      descriptionMD: \"\",\n      mainMD: \"\",\n      thumbURL: \"\",\n      thumbFile: \"\",\n      theme: [],\n      searchArray: [],\n      topicID: [],\n    },\n    eventVideos: [],\n    eventArticles: [],\n  },\n\n  getters: {\n    // currentTopicContents: (state) => state.id,\n    currentTopicEvents: (state) => state.events,\n    currentEvent: (state) => state.currentEvent,\n    currentEventId: (state) => state.eventId,\n    currentEventVideos: (state) => state.eventVideos,\n    currentEventArticles: (state) => state.eventArticles,\n    getField,\n  },\n\n  actions: {\n    bindEvents: firestoreAction(({ bindFirestoreRef, state }) => {\n      // return the promise returned by `bindFirestoreRef`\n      return bindFirestoreRef(\n        \"events\",\n        db\n          .collection(\"events\")\n          .where(\"topicID\", \"array-contains-any\", [state.topicId])\n      );\n    }),\n\n    //* set topicId to track current topic contents\n    setEventTopicId({ rootState, state, commit }) {\n      console.log(rootState.topics.topicID);\n      commit(\"SET_EVENT_TOPIC_ID\", rootState.topics.topicID);\n      console.log(state.currentEvent.topicID);\n    },\n\n    //* fetch all events under current topic id\n    async fetchEventsHandler({ commit, rootState, dispatch }) {\n      await commit(\"SET_TOPIC_ID\", rootState.topics.topicID);\n      await dispatch(\"fetchEventsList\");\n    },\n\n    //* fetches the list of all events under one topic\n    async fetchEventsList({ commit, rootState }) {\n      let eventsList = [];\n      await eventsRef\n        .where(\"topicID\", \"array-contains-any\", [rootState.topics.topicID])\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.docs.map((doc) => {\n            let eventItem = doc.data();\n\n            //* appends unique event id to each event\n            eventsList.push({\n              ...eventItem,\n              id: doc.id,\n            });\n          });\n          commit(\"SET_TOPIC_EVENTS\", eventsList);\n        });\n      // console.log(state.topicId);\n    },\n\n    //* handler for add event button, clears the fields\n    async addEventForm({ state, dispatch, commit }) {\n      const fields = {\n        title: \"\",\n        startDate: {\n          date: \"\",\n          era: true,\n        },\n        endDate: {\n          date: \"\",\n          era: true,\n        },\n        descriptionMD: \"\",\n        mainMD: \"\",\n        thumbURL: \"\",\n        thumbFile: \"\",\n        theme: [],\n        searchArray: [],\n        topicID: [],\n      };\n      await commit(\"SET_CURRENT_EVENT\", fields);\n      await dispatch(\"clearEventId\");\n      router.push({ name: \"EventGeneral\", path: \"/events/general\" });\n      console.log(state.eventId);\n    },\n\n    //* handles submit new event data\n    async submitNewEvent({ state, dispatch, rootState, commit }) {\n      await dispatch(\"setEventTopicId\");\n      await commit(\"SET_SEARCH_ARRAY\", state.currentEvent.title);\n      console.log(\"state\", state.currentEvent);\n      await eventsRef.add(state.currentEvent).then(() => {\n        console.log(\"Event Added\");\n      });\n      console.log(rootState.topics.topicID);\n    },\n\n    //* clears the current eventId\n    clearEventId({ commit }) {\n      commit(\"CLEAR_EVENT_ID\", null);\n    },\n\n    //* handles the close button of a form\n    async closeForm({ state, dispatch }, name, path) {\n      await dispatch(\"clearEventId\");\n      router.push({ name: name, path: path });\n      console.log(state.eventId);\n    },\n\n    //* set current event for edit\n    async editEvent({ state, commit }, event) {\n      await commit(\"SET_EVENT_ID\", event.id);\n\n      //* sets the index of the event for edit\n      let index = state.events.findIndex((e) => e.id == event.id);\n\n      //* identifies the current event for edit\n      let currentEvent = state.events[index];\n\n      await commit(\"SET_CURRENT_EVENT\", currentEvent);\n      // await dispatch(\"getEvent\");\n    },\n\n    //* handles submit for edit event\n    async submitEditEvent({ state, commit }) {\n      await commit(\"UPDATE_SEARCH_ARRAY\", state.currentEvent.title);\n      await eventsRef\n        .doc(state.eventId)\n        .set(state.currentEvent, { merge: true })\n        .then(() => {\n          console.log(\"Submit Edit\" + state.currentEvent);\n        });\n    },\n\n    //* deletes the event from the database\n    async deleteEvent({ commit, state, dispatch }, event) {\n      await commit(\"SET_EVENT_ID\", event.id);\n      eventsRef\n        .doc(state.eventId)\n        .delete()\n        .then(() => {\n          console.log(\"Deleted Event\");\n        });\n      dispatch(\"fetchEventsList\");\n    },\n\n    //* dynamic save button\n    handleSave({ state, dispatch }) {\n      if (state.eventId != null) {\n        //* handles the submit as an edit if editing an event\n        dispatch(\"submitEditEvent\");\n      } else {\n        //* handles the submit as a new event if adding an event\n        dispatch(\"submitNewEvent\");\n      }\n    },\n  },\n\n  mutations: {\n    ...vuexfireMutations,\n    // setId: (state, id) => (state.id = id),\n    SET_TOPIC_ID: (state, topicId) => (state.topicId = topicId),\n    SET_TOPIC_EVENTS: (state, events) => (state.events = events),\n    SET_EVENT_ID: (state, eventId) => (state.eventId = eventId),\n    SET_EVENT_TOPIC_ID: (state, topicId) => {\n      state.currentEvent.topicID.push(topicId);\n    },\n    SET_EVENT_VIDEOS: (state, videos) => (state.eventVideos = videos),\n    SET_EVENT_ARTICLES: (state, articles) => (state.eventArticles = articles),\n    SET_CURRENT_EVENT: (state, event) => (state.currentEvent = event),\n    CLEAR_EVENT_ID: (state, id) => (state.eventId = id),\n    SET_SEARCH_ARRAY: (state, array) => {\n      //* splits the words into strings and stores in newArray\n      let newArray = array.split(\" \");\n      state.currentEvent.searchArray.push(...newArray);\n    },\n    UPDATE_SEARCH_ARRAY: (state, array) => {\n      let newArray = array.split(\" \");\n      state.currentEvent.searchArray = newArray;\n    },\n    // SET_NEW_EVENT: (state, currentEvent) =>\n    updateField,\n  },\n};\n"]}]}