{"remainingRequest":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/src/components/ModifyContent/ContentDetails/Events/Forms/EventMap.vue?vue&type=style&index=0&id=c3b621dc&lang=scss&scoped=true&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/src/components/ModifyContent/ContentDetails/Events/Forms/EventMap.vue","mtime":1619072801996},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/css-loader/dist/cjs.js","mtime":1618025562925},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1619065981447},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/postcss-loader/src/index.js","mtime":1618025563424},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/sass-loader/dist/cjs.js","mtime":1619065990309},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/cache-loader/dist/cjs.js","mtime":1618025539709},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/vue-loader/lib/index.js","mtime":1619065981447}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI25hdiB7CiAgYSB7CiAgICBwYWRkaW5nOiA0cHggMjRweDsKICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICAgIGNvbG9yOiAjZmZmZmZmOwogICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWI2MzY4OwoKICAgICYucm91dGVyLWxpbmstZXhhY3QtYWN0aXZlIHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzM4OTFhNjsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["EventMap.vue"],"names":[],"mappingsyhBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"EventMap.vue","sourceRoot":"src/components/ModifyContent/ContentDetails/Events/Forms","sourcesContent":["<template>\n  <v-card class=\"mx-auto mt-4\" width=\"62vw\" height=\"40vw\">\n    <v-card class=\"mx-auto\" width=\"62vw\" height=\"5vw\" color=\"#273238\">\n      <div class=\"d-flex\">\n        <v-container class=\"pt-8 pl-12 d-flex\">\n          <div id=\"nav\">\n            <router-link\n              class=\"col\"\n              to=\"/addcontent/modifycontent/events/general\"\n              exact\n              >General</router-link\n            >\n            <router-link\n              class=\"col\"\n              to=\"/addcontent/modifycontent/events/map\"\n              exact\n              >Map</router-link\n            >\n            <router-link\n              class=\"col\"\n              to=\"/addcontent/modifycontent/events/text\"\n              exact\n              >Text</router-link\n            >\n            <router-link\n              class=\"col\"\n              to=\"/addcontent/modifycontent/events/resources\"\n              exact\n              >Resources</router-link\n            >\n          </div>\n        </v-container>\n        <div class=\"d-flex justify-end\">\n          <span class=\"material-icons\">\n            <v-icon\n              size=\"40\"\n              color=\"#3891A6\"\n              @click=\"closeForm('Events', '/events')\"\n            >\n              disabled_by_default\n            </v-icon>\n          </span>\n        </div>\n      </div>\n    </v-card>\n    <v-row>\n      <v-col class=\"d-flex justify-end mr-5\">\n        <v-btn\n          class=\"white--text\"\n          width=\"140\"\n          color=\"#3891A6\"\n          elevation=\"2\"\n          @click=\"handleSave\"\n          >Save</v-btn\n        >\n      </v-col>\n    </v-row>\n    <v-row class=\"mx-4\">\n      <v-col id=\"mapCol\">\n        <div class=\"legend d-flex align-center pb-6\">Hover over map</div>\n        <div class=\"view\" id=\"map\"></div>\n      </v-col>\n      <v-col>\n        <v-row>\n          <v-col cols=\"8\" class=\"d-flex align-start pl-0\">\n            <div>Event Coordinates:</div>\n          </v-col>\n          <v-col>\n            <div class=\"d-flex justify-end\">\n              <v-btn\n                class=\"white--text\"\n                small\n                color=\"#3891A6\"\n                elevation=\"2\"\n                @click=\"cleaningCoordinates\"\n              >\n                + Map\n              </v-btn>\n            </div>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-textarea\n            v-model=\"coordinatesMD\"\n            outlined\n            name=\"input-7-4\"\n            filled\n            label=\"paste coordinates\"\n            background-color=\"grey lighten-2\"\n          ></v-textarea>\n        </v-row>\n      </v-col>\n    </v-row>\n  </v-card>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\nimport { mapFields } from \"vuex-map-fields\";\nimport countries from \"@/countries.json\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\n\nexport default {\n  data() {\n    return {\n      items: countries,\n      data: [],\n      sets: [\n        {\n          name: \"Central Europe\",\n          set: d3.set([\n            \"BEL\",\n            \"CHE\",\n            \"DEU\",\n            \"AUT\",\n            \"ESP\",\n            \"FRA\",\n            \"ATF\",\n            \"GBR\",\n            \"GGY\",\n            \"JEY\",\n            \"FLK\",\n            \"SGS\",\n            \"GRC\",\n            \"MLT\",\n            \"IRL\",\n            \"ITA\",\n            \"LUX\",\n            \"NLD\",\n            \"AND\",\n            \"POL\",\n            \"PRT\",\n            \"TUR\",\n            \"CYP\",\n            \"CYN\",\n            \"MON\",\n            \"ALD\",\n            \"IMN\",\n            \"LTU\",\n            \"LVA\",\n            \"EST\",\n            \"BLR\",\n            \"UKR\",\n            \"MDA\",\n            \"ROU\",\n            \"HUN\",\n            \"SVK\",\n            \"SVN\",\n            \"HRV\",\n            \"BIH\",\n            \"CZE\",\n            \"BGR\",\n            \"KOS\",\n            \"MKD\",\n            \"ALB\",\n            \"MNE\",\n            \"SRB\",\n          ]),\n        },\n        {\n          name: \"Northern Europe\",\n          set: d3.set([\"DNK\", \"FRO\", \"FIN\", \"GRL\", \"ISL\", \"NOR\", \"SWE\"]),\n        },\n        {\n          name: \"North America\",\n          set: d3.set([\"CAN\", \"MEX\", \"USA\"]),\n        },\n        {\n          name: \"Caribbean\",\n          set: d3.set([\n            \"BLZ\",\n            \"CRI\",\n            \"CUB\",\n            \"GTM\",\n            \"HND\",\n            \"NIC\",\n            \"PAN\",\n            \"SLV\",\n            \"HTI\",\n            \"JAM\",\n            \"DOM\",\n            \"PRI\",\n            \"BHS\",\n            \"TCA\",\n            \"ATG\",\n            \"DMA\",\n            \"BRB\",\n            \"GRD\",\n          ]),\n        },\n        {\n          name: \"South America\",\n          set: d3.set([\n            \"ARG\",\n            \"BOL\",\n            \"BRA\",\n            \"CHL\",\n            \"COL\",\n            \"ECU\",\n            \"FLK\",\n            \"GUY\",\n            \"PRY\",\n            \"PER\",\n            \"SUR\",\n            \"URY\",\n            \"VEN\",\n            \"TTO\",\n          ]),\n        },\n        {\n          name: \"Africa\",\n          set: d3.set([\n            \"AGO\",\n            \"BDI\",\n            \"BEN\",\n            \"BFA\",\n            \"BWA\",\n            \"CAF\",\n            \"CIV\",\n            \"CMR\",\n            \"COD\",\n            \"COD\",\n            \"COG\",\n            \"COM\",\n            \"CPV\",\n            \"DJI\",\n            \"DZA\",\n            \"EGY\",\n            \"ERI\",\n            \"ETH\",\n            \"GAB\",\n            \"GHA\",\n            \"GIN\",\n            \"GMB\",\n            \"GNB\",\n            \"GNQ\",\n            \"KEN\",\n            \"LBR\",\n            \"LBY\",\n            \"LSO\",\n            \"MAR\",\n            \"MDG\",\n            \"MLI\",\n            \"MOZ\",\n            \"MRT\",\n            \"MUS\",\n            \"MWI\",\n            \"MYT\",\n            \"NAM\",\n            \"NER\",\n            \"NGA\",\n            \"REU\",\n            \"RWA\",\n            \"ESH\",\n            \"SDN\",\n            \"SDS\",\n            \"SEN\",\n            \"SHN\",\n            \"SHN\",\n            \"SLE\",\n            \"SOM\",\n            \"SOL\",\n            \"SSD\",\n            \"STP\",\n            \"STP\",\n            \"SWZ\",\n            \"SYC\",\n            \"TCD\",\n            \"TGO\",\n            \"TUN\",\n            \"TZA\",\n            \"TZA\",\n            \"UGA\",\n            \"ZAF\",\n            \"ZMB\",\n            \"ZWE\",\n          ]),\n        },\n        {\n          name: \"South Pacific\",\n          set: d3.set([\"AUS\", \"NZL\"]),\n        },\n        {\n          name: \"India\",\n          set: d3.set([\"IND\", \"BGD\", \"LKA\"]),\n        },\n        {\n          name: \"Orient\",\n          set: d3.set([\n            \"AZE\",\n            \"ARE\",\n            \"QAT\",\n            \"IRN\",\n            \"AFG\",\n            \"PAK\",\n            \"BHR\",\n            \"SAU\",\n            \"YEM\",\n            \"OMN\",\n            \"SYR\",\n            \"JOR\",\n            \"IRQ\",\n            \"KWT\",\n            \"ISR\",\n            \"LBN\",\n            \"PSX\",\n            \"PSR\",\n            \"GEO\",\n            \"ARM\",\n          ]),\n        },\n        {\n          name: \"Russia\",\n          set: d3.set([\"RUS\", \"KAZ\", \"UZB\", \"TKM\", \"KGZ\", \"TJK\"]),\n        },\n\n        // {\n        //   name: \"China\",\n        //   set: d3.set([\"CHN\"]),\n        // },\n        {\n          name: \"Asia\",\n          set: d3.set([\n            \"BTN\",\n            \"CHN\",\n            \"JPN\",\n            \"IDN\",\n            \"MNG\",\n            \"NPL\",\n            \"MMR\",\n            \"THA\",\n            \"KHM\",\n            \"LAO\",\n            \"VNM\",\n            \"PRK\",\n            \"KOR\",\n            \"TWN\",\n            \"MYS\",\n            \"PNG\",\n            \"SLB\",\n            \"VUT\",\n            \"NCL\",\n            \"BRN\",\n            \"PHL\",\n            \"TLS\",\n            \"HKG\",\n            \"FJI\",\n            \"GUM\",\n            \"PLW\",\n            \"FSM\",\n            \"MNP\",\n            \"KAS\",\n          ]),\n        },\n      ],\n      width: null,\n      mapRatio: null,\n      height: null,\n      projection: null,\n      path: null,\n      svg: null,\n      coordinatesMD: \"\",\n\n      coordinates: [\n        [\n          { lon: 114.7000004839849, lat: 42.02254999787689 },\n          { lon: 113.1672067240925, lat: 40.58903258718775 },\n          { lon: 108.5885758869572, lat: 38.01556166653811 },\n          { lon: 104.4627858529494, lat: 37.53921058237947 },\n          { lon: 102.1835644979335, lat: 34.91691173911467 },\n          { lon: 100.999099564981, lat: 33.99707385393174 },\n          { lon: 97.18808307950999, lat: 32.3025788858757 },\n          { lon: 95.66013730464984, lat: 29.09017865729048 },\n          { lon: 98.57342394735846, lat: 28.2005605394243 },\n          { lon: 101.8740222074411, lat: 26.13804480224899 },\n          { lon: 104.9973476309196, lat: 24.53510765041384 },\n          { lon: 106.6435046493752, lat: 22.50452433642101 },\n          { lon: 109.5871716936629, lat: 21.25475605332846 },\n          { lon: 116.4594192837376, lat: 22.9595454015056 },\n          { lon: 120.818784551134, lat: 26.99130045205105 },\n          { lon: 122.2920420167496, lat: 30.74267415824754 },\n          { lon: 119.3883278138953, lat: 34.83517495263233 },\n          { lon: 122.8639669075088, lat: 37.2223767144566 },\n          { lon: 120.9378067497715, lat: 38.30397804622267 },\n          { lon: 119.5893720324662, lat: 37.42414800444499 },\n          { lon: 117.8742460402969, lat: 38.72758280400602 },\n          { lon: 118.3845903213028, lat: 39.36174581708054 },\n          { lon: 121.5839796969244, lat: 40.71770109427904 },\n          { lon: 114.7000004839849, lat: 42.02254999787689 },\n        ],\n      ],\n    };\n  },\n  computed: {\n    ...mapFields(\"events\", [\n      \"currentEvent.descriptionMD\",\n      \"currentEvent.mainMD\",\n    ]),\n  },\n  methods: {\n    ...mapActions(\"events\", [\"handleSave\", \"closeForm\"]),\n    cleaningCoordinates() {\n      var str = this.coordinatesMD;\n      var polygon = [];\n      var start = 0;\n      var comma = 1;\n      var dic = { lon: 0, lat: 0 };\n      for (var i = 0; i < str.length; i++) {\n        if (str[i] == \",\" && comma == 1) {\n          dic.lon = parseFloat(str.substring(start, i));\n          start = i + 1;\n          comma++;\n        } else if (str[i] == \",\" && comma == 2) {\n          dic.lat = parseFloat(str.substring(start, i));\n          start = i;\n          comma++;\n        } else if (str[i] == \" \") {\n          polygon.push(dic);\n          dic = { lon: 0, lat: 0 };\n          start = i + 1;\n          comma = 1;\n        }\n      }\n      this.coordinatesMD = \"\";\n      this.coordinates.push(polygon);\n      this.primary();\n    },\n    async primary() {\n      d3.select(window).on(\"resize\", this.resize);\n\n      var width = 5 * document.querySelector(\"#mapCol\").offsetWidth;\n      var mapRatio = 0.7;\n      var height = width * mapRatio;\n\n      var projection = d3.geo\n        .mercator()\n        .scale(width / 1.5 / Math.PI)\n        .rotate([-1, 0])\n        .translate([width / 1.5, (height * 1.35) / 2])\n        .precision(0.1);\n\n      var path = d3.geo.path().projection(projection);\n\n      var svg = d3\n        .select(\"#map\")\n        .append(\"div\")\n        .classed(\"svg-container\", true)\n        .append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin\")\n        .attr(\"viewBox\", \"0 0 2000 2700\")\n        .classed(\"svg-content-responsive\", true)\n        .append(\"g\");\n\n      var w = this.items;\n\n      svg\n        .append(\"path\")\n        .datum(\n          topojson.merge(\n            w,\n            w.objects.units.geometries.filter(function (d) {\n              return d.id !== \"ATA\"; // Sorry Antarctica\n            })\n          )\n        )\n        .attr(\"class\", \"border\")\n        .attr(\"d\", path)\n        .attr(\"fill\", \"#d9edf7\");\n\n      for (var i = 0; i < this.sets.length; i++) {\n        svg\n          .append(\"path\")\n          .datum(\n            topojson.merge(\n              w,\n              w.objects.units.geometries.filter(\n                function (d) {\n                  return this.sets[i].set.has(d.id);\n                }.bind(this)\n              )\n            )\n          )\n          .attr(\"class\", \"regions selected\")\n          .attr(\"d\", path)\n          .attr({ \"data-name\": this.sets[i].name })\n          .attr(\"fill\", \"#464646\")\n          .on(\"mouseover\", function () {\n            var region = d3.select(this);\n            region.attr(\"fill\", \"#ff9800\");\n            document.querySelector(\".legend\").innerText = region.attr(\n              \"data-name\"\n            );\n          })\n          .on(\"mouseout\", function () {\n            var region = d3.select(this);\n            region.attr(\"fill\", \"#464646\");\n            document.querySelector(\".legend\").innerText = \"Hover of Map\";\n          });\n      }\n\n      //This is the accessor function we talked about above\n      var lineFunction = d3.svg\n        .line()\n        .x(function (d) {\n          var x = projection([d.lon, d.lat]); // [longitude, latitude] -- [x, y]\n          return x[0];\n        })\n        .y(function (d) {\n          var x = projection([d.lon, d.lat]); // [longitude, latitude] -- [x, y]\n          return x[1];\n        })\n        .interpolate(\"linear\");\n\n      //The line SVG Path we draw\n      // this.coordinates.forEach((polygon) => {\n      // console.log(polygon);\n      for (var c = 0; c < this.coordinates.length; c++) {\n        console.log(this.coordinates);\n        // var polygon = this.coordinates[0];\n        // console.log(polygon);\n        svg\n          .append(\"path\")\n          .attr(\"d\", lineFunction(this.coordinates[0]))\n          // .attr(\"stroke\", \"blue\")\n          // .attr(\"stroke-width\", 2)\n          .attr(\"fill\", \"#BDFF00\");\n      }\n    },\n  },\n  mounted() {\n    this.primary();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#nav {\n  a {\n    padding: 4px 24px;\n    text-decoration: none;\n    color: #ffffff;\n    font-weight: lighter;\n    background-color: #5b6368;\n\n    &.router-link-exact-active {\n      background-color: #3891a6;\n    }\n  }\n}\n</style>\n"]}]}