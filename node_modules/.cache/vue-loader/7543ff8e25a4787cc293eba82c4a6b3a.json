{"remainingRequest":"/Users/priscilla_cancar/Documents/Websites/StudyBites/study-bites copy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/Websites/StudyBites/study-bites copy/src/components/ModifyContent/ContentDetails/Events/Forms/Resources/Article/Article.vue?vue&type=template&id=7e0513b3&scoped=true&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/Websites/StudyBites/study-bites copy/src/components/ModifyContent/ContentDetails/Events/Forms/Resources/Article/Article.vue","mtime":1619331175805},{"path":"/Users/priscilla_cancar/Documents/Websites/StudyBites/study-bites copy/node_modules/cache-loader/dist/cjs.js","mtime":1618025539709},{"path":"/Users/priscilla_cancar/Documents/Websites/StudyBites/study-bites copy/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1619065981447},{"path":"/Users/priscilla_cancar/Documents/Websites/StudyBites/study-bites copy/node_modules/cache-loader/dist/cjs.js","mtime":1618025539709},{"path":"/Users/priscilla_cancar/Documents/Websites/StudyBites/study-bites copy/node_modules/vue-loader/lib/index.js","mtime":1619065981447}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}