{"remainingRequest":"/Users/priscilla_cancar/Documents/Websites/StudyBites/study-bites/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/Websites/StudyBites/study-bites/src/components/ModifyTopic/Forms/Resources/Article/Article.vue?vue&type=template&id=66ee1ace&scoped=true&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/Websites/StudyBites/study-bites/src/components/ModifyTopic/Forms/Resources/Article/Article.vue","mtime":1618025891394},{"path":"/Users/priscilla_cancar/Documents/Websites/StudyBites/study-bites/node_modules/cache-loader/dist/cjs.js","mtime":1618025539709},{"path":"/Users/priscilla_cancar/Documents/Websites/StudyBites/study-bites/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1619065981447},{"path":"/Users/priscilla_cancar/Documents/Websites/StudyBites/study-bites/node_modules/cache-loader/dist/cjs.js","mtime":1618025539709},{"path":"/Users/priscilla_cancar/Documents/Websites/StudyBites/study-bites/node_modules/vue-loader/lib/index.js","mtime":1619065981447}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImQtZmxleCBwdC00IGp1c3RpZnktY2VudGVyIGFsaWduLWNlbnRlciI+CiAgPHYtY2FyZAogICAgY2xhc3M9ImQtZmxleCIKICAgIHdpZHRoPSIyNXZ3IgogICAgaGVpZ2h0PSI0N3B4IgogICAgb3V0bGluZWQKICAgIHN0eWxlPSJib3JkZXI6IDFweCBzb2xpZCAjOTc5Nzk3IgogID4KICAgIDxkaXYgY2xhc3M9ImQtZmxleCBmbGV4LWNvbHVtbiIgc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgcmlnaHQ6IDBweCI+CiAgICAgIDxkaXYgaWQ9ImNhcmRidG4xIj4KICAgICAgICA8IS0tIE1vZGFsIHdoZW4gZWRpdGluZyBhbiBhcnRpY2xlIC0tPgogICAgICAgIDx2LWRpYWxvZyB2LW1vZGVsPSJlZGl0RGlhbG9nIiBwZXJzaXN0ZW50IG1heC13aWR0aD0iNTAwIj4KICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YWN0aXZhdG9yPSJ7IG9uLCBhdHRycyB9Ij4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1hdGVyaWFsLWljb25zIj4KICAgICAgICAgICAgICA8di1pY29uCiAgICAgICAgICAgICAgICBjbGFzcz0iZC1mbGV4IgogICAgICAgICAgICAgICAgc2l6ZT0iMjAiCiAgICAgICAgICAgICAgICBjb2xvcj0iIzM4OTFBNiIKICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXIiCiAgICAgICAgICAgICAgICBAY2xpY2s9ImhhbmRsZUVkaXRBcnRpY2xlKGFydGljbGUpIgogICAgICAgICAgICAgICAgdi1iaW5kPSJhdHRycyIKICAgICAgICAgICAgICAgIHYtb249Im9uIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIGNyZWF0ZQogICAgICAgICAgICAgIDwvdi1pY29uPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgPHYtY2FyZD4KICAgICAgICAgICAgPHYtY2FyZC10aXRsZSBjbGFzcz0iaGVhZGxpbmUgZC1mbGV4IGp1c3RpZnktY2VudGVyIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtdC00Ij4KICAgICAgICAgICAgICAgIEVkaXRpbmcgYW4gQXJ0aWNsZQogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L3YtY2FyZC10aXRsZT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGp1c3RpZnktY2VudGVyIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSIgZC1mbGV4IHBsLTgiPgogICAgICAgICAgICAgICAgPHYtZm9ybSByZWY9ImZvcm0iIGxhenktdmFsaWRhdGlvbj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4Ij4KICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0icHgtMiIKICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9Im5ld3NTb3VyY2UiCiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iTmV3cyBTb3VyY2UiCiAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZAogICAgICAgICAgICAgICAgICAgICAgZGVuc2UKICAgICAgICAgICAgICAgICAgICA+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InB4LTIiCiAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJwdWJsaXNoZWQiCiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iUHVibGlzaCBEYXRlIgogICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQKICAgICAgICAgICAgICAgICAgICAgIGRlbnNlCiAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXQtbjQiIHN0eWxlPSJ3aWR0aDogMTU1cHgiPgogICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJweC0yIgogICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0idGl0bGUiCiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iQXJ0aWNsZSBUaXRsZSIKICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkCiAgICAgICAgICAgICAgICAgICAgICBkZW5zZQogICAgICAgICAgICAgICAgICAgID48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InB4LTIiCiAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJzdW1tYXJ5IgogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlN1bW1hcnkiCiAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yPSJncmV5IGxpZ2h0ZW4tMiIKICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkCiAgICAgICAgICAgICAgICAgICAgICBkZW5zZQogICAgICAgICAgICAgICAgICAgICAgb3V0bGluZWQKICAgICAgICAgICAgICAgICAgICA+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggbXQtbjIgcGwtMiI+CiAgICAgICAgICAgICAgICAgICAgPHYtY2FyZAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImQtYmxvY2siCiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9IjgwcHgiCiAgICAgICAgICAgICAgICAgICAgICB3aWR0aD0iMTB2dyIKICAgICAgICAgICAgICAgICAgICAgIGNvbG9yPSJncmV5IGxpZ2h0ZW4tMiIKICAgICAgICAgICAgICAgICAgICAgIG91dGxpbmVkCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPCEtLSA8di1pbWcgOnNyYz0idXJsSW1nIj48L3YtaW1nPiAtLT4KICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPHYtaW1nIHYtaWY9InVybCIgOnNyYz0idXJsIiBoZWlnaHQ9IjgwcHgiIHdpZHRoPSIxMHZ3Ij48L3YtaW1nPiAtLT4KICAgICAgICAgICAgICAgICAgICAgIDx2LWltZwogICAgICAgICAgICAgICAgICAgICAgICB2LWlmPSJ1cmxJbWciCiAgICAgICAgICAgICAgICAgICAgICAgIDpzcmM9InVybEltZyIKICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PSI4MHB4IgogICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD0iMTB2dyIKICAgICAgICAgICAgICAgICAgICAgID48L3YtaW1nPgogICAgICAgICAgICAgICAgICAgIDwvdi1jYXJkPgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJ3aWR0aDogMTN2dyI+CiAgICAgICAgICAgICAgICAgICAgICA8IS0tIDx2LWZpbGUtaW5wdXQKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InB0LTYgbWwtbjQiCiAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImltYWdlIgogICAgICAgICAgICAgICAgICAgICAgICBhY2NlcHQ9ImltYWdlLyoiCiAgICAgICAgICAgICAgICAgICAgICAgIHByZXBlbmQtaWNvbj0ibm9uZSIKICAgICAgICAgICAgICAgICAgICAgICAgYXBwZW5kLWljb249ImF0dGFjaF9maWxlIgogICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iQXJ0aWNsZSBUaHVtYm5haWwiCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8L3YtZmlsZS1pbnB1dD4gLS0+CiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InBsLTQiCiAgICAgICAgICAgICAgICAgICAgICAgIHJlZj0iaW5wdXQxIgogICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJmaWxlIgogICAgICAgICAgICAgICAgICAgICAgICBAY2hhbmdlPSJwcmV2aWV3SW1hZ2UiCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXQtNCIgc3R5bGU9IndpZHRoOiAxNTVweCI+CiAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InB4LTIiCiAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJ1cmwiCiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iQXJ0aWNsZSBMaW5rIgogICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQKICAgICAgICAgICAgICAgICAgICAgIGRlbnNlCiAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvdi1mb3JtPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPHYtY2FyZC1hY3Rpb25zPgogICAgICAgICAgICAgIDx2LXNwYWNlcj48L3Ytc3BhY2VyPgogICAgICAgICAgICAgIDx2LWJ0biB0ZXh0IEBjbGljaz0iY2FuY2VsSGFuZGxlciI+CiAgICAgICAgICAgICAgICBDYW5jZWwKICAgICAgICAgICAgICA8L3YtYnRuPgoKICAgICAgICAgICAgICA8IS0tIEZpbmFsIGNvbmZpcm1hdGlvbiBvbiBzYXZpbmcgZWRpdGVkIGFydGljbGUgLS0+CiAgICAgICAgICAgICAgPHYtYnRuIGNvbG9yPSIjMzg5MUE2IiB0ZXh0IEBjbGljaz0ic3VibWl0RWRpdEFydGljbGVIYW5kbGVyIj4KICAgICAgICAgICAgICAgIFNhdmUKICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICA8L3YtY2FyZC1hY3Rpb25zPgogICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgPC92LWRpYWxvZz4KICAgICAgICA8IS0tIE1vZGFsICAtLT4KCiAgICAgICAgPCEtLSBNb2RhbCB3aGVuIGRlbGV0aW5nIGFuIGFydGljbGUgLS0+CiAgICAgICAgPHYtZGlhbG9nIHYtbW9kZWw9ImRlbERpYWxvZyIgcGVyc2lzdGVudCBtYXgtd2lkdGg9IjI1MCI+CiAgICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmFjdGl2YXRvcj0ieyBvbiwgYXR0cnMgfSI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtYXRlcmlhbC1pY29ucyI+CiAgICAgICAgICAgICAgPHYtaWNvbgogICAgICAgICAgICAgICAgY2xhc3M9ImQtZmxleCIKICAgICAgICAgICAgICAgIHNpemU9IjIwIgogICAgICAgICAgICAgICAgY29sb3I9IiMzODkxQTYiCiAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyIgogICAgICAgICAgICAgICAgdi1iaW5kPSJhdHRycyIKICAgICAgICAgICAgICAgIHYtb249Im9uIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIGRpc2FibGVkX2J5X2RlZmF1bHQKICAgICAgICAgICAgICA8L3YtaWNvbj4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDx2LWNhcmQ+CiAgICAgICAgICAgIDx2LWNhcmQtdGl0bGUgY2xhc3M9ImhlYWRsaW5lIj4KICAgICAgICAgICAgICA8ZGl2PkFyZSB5b3Ugc3VyZSB5b3Ugd2FudCB0byBkZWxldGUge3sgYXJ0aWNsZS50aXRsZSB9fT88L2Rpdj4KICAgICAgICAgICAgPC92LWNhcmQtdGl0bGU+CiAgICAgICAgICAgIDx2LWNhcmQtdGV4dAogICAgICAgICAgICAgID5PbmNlIHt7IGFydGljbGUudGl0bGUgfX0gaXMgZGVsZXRlZCB5b3UgY2FuIG5ldmVyIHJldHJpZXZlCiAgICAgICAgICAgICAgaXQ8L3YtY2FyZC10ZXh0CiAgICAgICAgICAgID4KICAgICAgICAgICAgPHYtY2FyZC1hY3Rpb25zPgogICAgICAgICAgICAgIDx2LXNwYWNlcj48L3Ytc3BhY2VyPgogICAgICAgICAgICAgIDx2LWJ0biB0ZXh0IEBjbGljaz0iZGVsRGlhbG9nID0gZmFsc2UiPgogICAgICAgICAgICAgICAgQ2FuY2VsCiAgICAgICAgICAgICAgPC92LWJ0bj4KCiAgICAgICAgICAgICAgPCEtLSBGaW5hbCBjb25maXJtYXRpb24gb24gZGVsZXRpbmcgYXJ0aWNsZSAtLT4KICAgICAgICAgICAgICA8di1idG4KICAgICAgICAgICAgICAgIGNvbG9yPSJyZWQgZGFya2VuLTEiCiAgICAgICAgICAgICAgICB0ZXh0CiAgICAgICAgICAgICAgICBAY2xpY2s9ImRlbGV0ZUFydGljbGVIYW5kbGVyKGFydGljbGUpIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIFllcywgZGVsZXRlCiAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgPC92LWNhcmQtYWN0aW9ucz4KICAgICAgICAgIDwvdi1jYXJkPgogICAgICAgIDwvdi1kaWFsb2c+CiAgICAgICAgPCEtLSBNb2RhbCAgLS0+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJmb250LXdlaWdodC1yZWd1bGFyIGQtZmxleCBmbGV4LWNvbHVtbiBmbGV4LXN0YXJ0IHB0LTIgcGwtNCI+CiAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCIgc3R5bGU9ImZvbnQtc2l6ZTogMTRweCI+CiAgICAgICAgQXJ0aWNsZSBUaXRsZToge3sgYXJ0aWNsZS50aXRsZSB9fQogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IiBzdHlsZT0iZm9udC1zaXplOiAxMHB4Ij4KICAgICAgICB7eyBhcnRpY2xlLnVybCB9fQogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvdi1jYXJkPgo8L2Rpdj4K"},null]}