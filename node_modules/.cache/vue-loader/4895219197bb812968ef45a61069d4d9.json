{"remainingRequest":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/components/ModifyTopic/Forms/General.vue?vue&type=style&index=0&id=3bd8afce&lang=scss&scoped=true&","dependencies":[{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/components/ModifyTopic/Forms/General.vue","mtime":1642917736737},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/css-loader/dist/cjs.js","mtime":1640582289591},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1640582283219},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/postcss-loader/src/index.js","mtime":1640582289712},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/sass-loader/dist/cjs.js","mtime":1640807481780},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/cache-loader/dist/cjs.js","mtime":1640582283784},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/vue-loader/lib/index.js","mtime":1640582283219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2ltYWdlVGh1bWJuYWlsIHsKICB3aWR0aDogMTV2dzsKICBoZWlnaHQ6IDEwdnc7CiAgYmFja2dyb3VuZC1jb2xvcjogIzViNjM2ODsKfQojbmF2IHsKICBhIHsKICAgIHBhZGRpbmc6IDRweCAyNHB4OwogICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogICAgY29sb3I6ICNmZmZmZmY7CiAgICBmb250LXdlaWdodDogbGlnaHRlcjsKICAgIGJhY2tncm91bmQtY29sb3I6ICM1YjYzNjg7CgogICAgJi5yb3V0ZXItbGluay1leGFjdC1hY3RpdmUgewogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzg5MWE2OwogICAgfQogIH0KfQo="},{"version":3,"sources":["General.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"General.vue","sourceRoot":"src/components/ModifyTopic/Forms","sourcesContent":["<template>\n  <v-form>\n    <v-card class=\"mx-auto mt-4 pb-6\" width=\"70vw\" height=\"auto\">\n      <navbar />\n\n      <v-container class=\"px-10\">\n        <v-row>\n          <v-col class=\"d-flex align-center  justify-end\">\n            <div class=\"d-flex\" style=\"width:110px\">\n              Topic: {{ topicToggle }}\n            </div>\n            <v-switch v-model=\"switch1\" inset @click=\"switchToggle\"></v-switch>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col class=\"d-flex flex-row\">\n            <v-card\n              class=\"d-block\"\n              width=\"9vw\"\n              height=\"80px\"\n              color=\"grey lighten-2\"\n            >\n              <v-img v-if=\"urlTopic\" :src=\"urlTopic\" height=\"100%\"></v-img>\n            </v-card>\n\n            <div class=\"d-flex flex-column justify-end pl-4\">\n              <label for=\"topic\">Upload TOPIC thumbnail</label>\n              <input\n                name=\"topic\"\n                type=\"file\"\n                @change=\"previewImage($event, topicType)\"\n              />\n            </div>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n            <v-text-field v-model=\"title\" label=\"Title\" outlined dense required>\n            </v-text-field>\n          </v-col>\n        </v-row>\n        <div class=\" d-flex justify-start font-weight-bold mt-6 mb-2\">\n          Intro:\n        </div>\n        <v-row class=\"ma-0\">\n          <v-col cols=\"8\">\n            <v-textarea\n              v-model=\"introMD\"\n              outlined\n              name=\"input-7-4\"\n              label=\"Main event content (has markdown):\"\n            ></v-textarea>\n          </v-col>\n          <v-col cols=\"4\">\n            <v-card\n              class=\"d-block\"\n              width=\"9vw\"\n              height=\"80px\"\n              color=\"grey lighten-2\"\n            >\n              <v-img :src=\"urlIntro\" height=\"100%\"></v-img>\n            </v-card>\n\n            <div class=\"d-flex flex-column justify-end pt-4\">\n              <label for=\"map\">Upload INTRO thumbnail</label>\n              <input\n                name=\"intro\"\n                type=\"file\"\n                @change=\"previewImage($event, introType)\"\n              />\n            </div>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col lg=\"6\" md=\"6\" sm=\"12\" xs=\"12\" class=\"d-flex justify-start\">\n            <v-select\n              v-model=\"timePeriod\"\n              :items=\"timePeriodChoices\"\n              :menu-props=\"{ top: true, offsetY: true }\"\n              label=\"Time Period\"\n              outlined\n              dense\n            >\n            </v-select>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col class=\"pt-10\">\n            <v-btn\n              class=\"white--text\"\n              width=\"140\"\n              color=\"#3891A6\"\n              elevation=\"2\"\n              block\n              @click=\"handleSaveEdit\"\n              >Save Topic\n              <v-icon small class=\"pl-2\">mdi-plus-circle-outline</v-icon>\n            </v-btn>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-card>\n  </v-form>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from \"vuex\";\nimport { mapFields } from \"vuex-map-fields\";\nimport firebase from \"firebase\";\nimport navbar from \"./TopicIntroHeader.vue\";\n\nexport default {\n  components: { navbar },\n  data: () => ({\n    image: null,\n    timePeriodChoices: [1, 2, 3, 4],\n    disabled: 1,\n    urlTopic: null,\n    urlIntro: null,\n    switch1: true,\n    topicToggle: \"Enabled\",\n    introType: \"intro\",\n    topicType: \"topic\",\n    introImgData: null,\n    topicImgData: null,\n    imgDataArr: [],\n  }),\n  props: [\"topic\"],\n  computed: {\n    // selectsPeriod() {\n    //   return this.selectedPeriod.length > 0;\n    // },\n    // icon() {\n    //   if (this.selectsPeriod) return \"mdi-minus-box\";\n    //   return \"mdi-checkbox-blank-outline\";\n    // },\n    // checkfield() {\n    //   return this.title || this.image || this.selectedPeriod;\n    // },\n    ...mapGetters(\"topics\", [\"currentTopic\", \"currentId\"]),\n    ...mapFields(\"topics\", [\n      \"currentTopic.title\",\n      \"currentTopic.intro_thumbFile\",\n      \"currentTopic.intro_thumbURL\",\n      \"currentTopic.topic_thumbFile\",\n      \"currentTopic.topic_thumbURL\",\n      \"currentTopic.introMD\",\n      // 'currentTopic.disabled',\n      \"currentTopic.timePeriod\",\n      \"currentTopic.searchArray\",\n    ]),\n  },\n  methods: {\n    ...mapActions(\"topics\", [\"submitEditTopic\"]),\n    mountPreview() {\n      this.urlIntro = this.intro_thumbURL;\n      this.urlTopic = this.topic_thumbURL;\n    },\n    previewImage(e, type) {\n      let file = e.target.files[0];\n      let fileSize = file.size / 1024 / 1024;\n      if (fileSize > 2) {\n        e.preventDefault();\n        alert(\"File is over 2mb\");\n      } else {\n        if (type === \"intro\") {\n          this.urlIntro = URL.createObjectURL(file);\n          this.introImgData = e.target.files[0];\n          let intro = { type: \"intro\", data: this.introImgData };\n          this.imgDataArr.push(intro);\n          this.intro_thumbFile = file.name;\n        } else if (type === \"topic\") {\n          this.urlTopic = URL.createObjectURL(file);\n          this.topicImgData = e.target.files[0];\n          let topic = { type: \"topic\", data: this.topicImgData };\n          this.imgDataArr.push(topic);\n          this.topic_thumbFile = file.name;\n        } else {\n          console.log(\"Error\");\n        }\n      }\n\n      console.log(this.imgDataArr);\n    },\n    async onUpload() {\n      await Promise.all(\n        this.imgDataArr.map((image) => {\n          const storageRef = firebase\n            .storage()\n            .ref(`${image.data.name}`)\n            .put(image.data);\n          storageRef.on(\n            `state_changed`,\n            (snapshot) => {\n              this.uploadValue =\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            },\n            (error) => {\n              console.log(error.message);\n            },\n            () => {\n              this.uploadValue = 100;\n              storageRef.snapshot.ref.getDownloadURL().then((url) => {\n                // this.img1 = url;\n                // console.log(this.img1);\n                //   this.intro_thumbURL = url;\n                if (image.type === \"intro\") {\n                  console.log(url, image.type);\n                  this.intro_thumbURL = url;\n                } else if (image.type === \"topic\") {\n                  console.log(url, image.type);\n                  this.topic_thumbURL = url;\n                }\n                //   console.log(data.name, data, url);\n                console.log(this.intro_thumbURL);\n                console.log(this.topic_thumbURL);\n              });\n            }\n          );\n        })\n      ).then(() => {\n        return true;\n      });\n    },\n    async handleSaveEdit() {\n      console.log(\"save topic\");\n      // if (this.intro_thumbURL === \"\") {\n      //   //   alert(\"Please provide images\");\n      //   // this.intro_thumbFile = \"placeHolderImg.png\";\n      //   // this.intro_thumbURL =\n      //   //   \"https://firebasestorage.googleapis.com/v0/b/study-bites-1.appspot.com/o/placeHolderImg.png?alt=media&token=38eced07-54a4-4b3a-b2f9-49fa8e01da63\";\n      //   await this.onUpload();\n      //   setTimeout(async () => {\n      //     await this.submitEditTopic();\n      //   }, 2000);\n      // } else if (this.topic_thumbURL === \"\") {\n      //   // this.topic_thumbFile = \"placeHolderImg.png\";\n      //   // this.topic_thumbURL =\n      //   //   \"https://firebasestorage.googleapis.com/v0/b/study-bites-1.appspot.com/o/placeHolderImg.png?alt=media&token=38eced07-54a4-4b3a-b2f9-49fa8e01da63\";\n      //   await this.onUpload();\n      //   setTimeout(async () => {\n      //     await this.submitEditTopic();\n      //   }, 2000);\n      // } else if (this.topicImgData || this.introImgData) {\n      //   await this.onUpload();\n      //   setTimeout(async () => {\n      //     await this.submitEditTopic();\n      //   }, 2000);\n      // }\n\n      if (this.topicImgData || this.introImgData) {\n        let imgPromise = Promise.resolve(this.onUpload());\n        await imgPromise.then(async () => {\n          setTimeout(async () => {\n            await this.submitEditTopic();\n          }, 2000);\n        });\n      } else {\n        setTimeout(async () => {\n          await this.submitEditTopic();\n        }, 2000);\n      }\n    },\n    resetbtn(e) {\n      if (this.checkfield) {\n        this.disabled = 0;\n      }\n      e.preventDefault();\n    },\n    switchToggle(e) {\n      if (this.switch1) {\n        this.topicToggle = \"Enabled\";\n      } else {\n        this.topicToggle = \"Disabled\";\n      }\n      e.preventDefault();\n    },\n  },\n  created() {\n    this.mountPreview();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#imageThumbnail {\n  width: 15vw;\n  height: 10vw;\n  background-color: #5b6368;\n}\n#nav {\n  a {\n    padding: 4px 24px;\n    text-decoration: none;\n    color: #ffffff;\n    font-weight: lighter;\n    background-color: #5b6368;\n\n    &.router-link-exact-active {\n      background-color: #3891a6;\n    }\n  }\n}\n</style>\n"]}]}