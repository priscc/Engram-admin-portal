{"remainingRequest":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/components/ModifyContent/ContentDetails/HistoricalPeople/Forms/HistPeopleGeneral.vue?vue&type=style&index=0&id=ec86f492&lang=scss&scoped=true&","dependencies":[{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/components/ModifyContent/ContentDetails/HistoricalPeople/Forms/HistPeopleGeneral.vue","mtime":1642803102163},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/css-loader/dist/cjs.js","mtime":1640582289591},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1640582283219},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/postcss-loader/src/index.js","mtime":1640582289712},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/sass-loader/dist/cjs.js","mtime":1640807481780},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/cache-loader/dist/cjs.js","mtime":1640582283784},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/vue-loader/lib/index.js","mtime":1640582283219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNpbWFnZVRodW1ibmFpbCB7CiAgd2lkdGg6IDE1dnc7CiAgaGVpZ2h0OiAxMHZ3OwogIGJhY2tncm91bmQtY29sb3I6ICM1YjYzNjg7Cn0KI25hdiB7CiAgYSB7CiAgICBwYWRkaW5nOiA0cHggMjRweDsKICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICAgIGNvbG9yOiAjZmZmZmZmOwogICAgZm9udC13ZWlnaHQ6IGxpZ2h0ZXI7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNWI2MzY4OwoKICAgICYucm91dGVyLWxpbmstZXhhY3QtYWN0aXZlIHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzM4OTFhNjsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["HistPeopleGeneral.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"HistPeopleGeneral.vue","sourceRoot":"src/components/ModifyContent/ContentDetails/HistoricalPeople/Forms","sourcesContent":["<template>\n  <div id=\"PeopleInfo\">\n    <v-form>\n      <v-card class=\"mx-auto mt-4 pb-6\" width=\"62vw\" height=\"auto\">\n        <navbar />\n        <v-container class=\"px-10\">\n          <v-row>\n            <v-col class=\"d-flex flex-row\">\n              <v-card\n                class=\"d-block\"\n                height=\"120px\"\n                width=\"180px\"\n                color=\"grey lighten-2\"\n              >\n                <v-img v-if=\"url\" :src=\"url\" height=\"100%\"></v-img>\n              </v-card>\n              <div class=\"d-flex align-end\">\n                <input\n                  class=\"pl-4\"\n                  ref=\"input1\"\n                  type=\"file\"\n                  @change=\"previewImage\"\n                />\n              </div>\n            </v-col>\n          </v-row>\n          <v-row>\n            <v-col>\n              <v-text-field\n                v-model=\"name\"\n                label=\"Name\"\n                outlined\n                dense\n                required\n              ></v-text-field>\n            </v-col>\n          </v-row>\n          <v-row>\n            <v-col>\n              <div>\n                <v-text-field\n                  v-model=\"dateOfBirth\"\n                  label=\"Date of Birth\"\n                  outlined\n                  dense\n                ></v-text-field>\n                <div class=\"d-flex align-center mt-n10\">\n                  <div class=\"d-flex\" style=\"width: 30px\">{{ eraBirth }}</div>\n                  <v-switch\n                    v-model=\"birthEra\"\n                    color=\"#3891A6\"\n                    inset\n                    @click=\"switchToggle($event, 'birth')\"\n                  ></v-switch>\n                </div>\n              </div>\n            </v-col>\n            <v-spacer></v-spacer>\n            <v-col>\n              <div>\n                <v-text-field\n                  v-model=\"dateOfPassing\"\n                  label=\"Date of Passing\"\n                  outlined\n                  dense\n                ></v-text-field>\n              </div>\n              <div class=\"d-flex align-center mt-n10 pr-12\">\n                <div class=\"d-flex\" style=\"width: 30px\">{{ eraPassing }}</div>\n                <v-switch\n                  v-model=\"passingEra\"\n                  color=\"#3891A6\"\n                  inset\n                  @click=\"switchToggle($event, 'passing')\"\n                ></v-switch>\n              </div>\n            </v-col>\n          </v-row>\n          <v-row>\n            <v-col class=\"pt-10\">\n              <v-btn\n                class=\"white--text\"\n                width=\"140\"\n                color=\"#3891A6\"\n                elevation=\"2\"\n                block\n                :disabled=\"!checkfield\"\n                @click=\"savePersonHandler\"\n                >Save Historical Figure\n                <v-icon small class=\"pl-2\">mdi-plus-circle-outline</v-icon>\n              </v-btn>\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-card>\n    </v-form>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from \"vuex\";\nimport { mapFields } from \"vuex-map-fields\";\nimport firebase from \"firebase\";\nimport navbar from \"./HistPeopleCardHeader.vue\";\n\nexport default {\n  components: { navbar },\n  data: () => ({\n    image: null,\n    disabled: 1,\n    url: null,\n    imageData: null,\n    eraBirth: \"AD\",\n    eraPassing: \"AD\",\n  }),\n  computed: {\n    checkfield() {\n      return this.currentPerson.name;\n    },\n    ...mapFields(\"people\", [\n      \"currentPerson.name\",\n      \"currentPerson.thumbURL\",\n      \"currentPerson.thumbFile\",\n    ]),\n    ...mapFields(\"people\", {\n      dateOfBirth: \"currentPerson.dateOfBirth.date\",\n      birthEra: \"currentPerson.dateOfBirth.era\",\n      dateOfPassing: \"currentPerson.dateOfPassing.date\",\n      passingEra: \"currentPerson.dateOfPassing.era\",\n    }),\n    ...mapGetters(\"people\", [\"currentPersonId\", \"currentPerson\"]),\n\n    //* checks if the person name field is empty\n    routeValidation() {\n      if (this.currentPerson.name == \"\") {\n        //* if name field is empty, route is not allowed\n        return false;\n      } else {\n        //* if not empty, route is allowed\n        return true;\n      }\n    },\n  },\n  methods: {\n    ...mapActions(\"people\", [\"handleSave\"]),\n    mountPreview() {\n      this.url = this.thumbURL;\n    },\n    toggle() {\n      this.$nextTick(() => {\n        this.selectedPeriod = this.timePeriod.slice();\n      });\n    },\n    switchToggle(e, date) {\n      console.log(this.birthEra);\n      console.log(this.passingEra);\n      if (date === \"birth\") {\n        if (this.birthEra) {\n          this.eraBirth = \"AD\";\n        } else {\n          this.eraBirth = \"BC\";\n        }\n      } else {\n        if (this.passingEra) {\n          this.eraPassing = \"AD\";\n        } else {\n          this.eraPassing = \"BC\";\n        }\n      }\n      e.preventDefault();\n    },\n    previewImage(e) {\n      this.uploadValue = 0;\n      let file = e.target.files[0];\n      let fileSize = file.size / 1024 / 1024;\n      if (fileSize > 2) {\n        e.preventDefault();\n        alert(\"File is over 2mb\");\n      } else {\n        this.url = URL.createObjectURL(file);\n        this.imageData = e.target.files[0];\n        this.thumbFile = file.name;\n      }\n    },\n    onUpload() {\n      const storageRef = firebase\n        .storage()\n        .ref(`${this.imageData.name}`)\n        .put(this.imageData);\n      storageRef.on(\n        `state_changed`,\n        (snapshot) => {\n          this.uploadValue =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        },\n        (error) => {\n          console.log(\"image upload error\", error.message);\n        },\n        () => {\n          this.uploadValue = 100;\n          storageRef.snapshot.ref.getDownloadURL().then((url) => {\n            this.thumbURL = url;\n            console.log(this.thumbURL);\n          });\n        }\n      );\n    },\n    async savePersonHandler() {\n      if (this.imageData) {\n        let imgPromise = Promise.resolve(this.onUpload());\n        await imgPromise.then(async () => {\n          setTimeout(async () => {\n            await this.handleSave();\n          }, 2000);\n        });\n      } else {\n        setTimeout(async () => {\n          await this.handleSave();\n        }, 2000);\n      }\n    },\n  },\n  created() {\n    this.mountPreview();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#imageThumbnail {\n  width: 15vw;\n  height: 10vw;\n  background-color: #5b6368;\n}\n#nav {\n  a {\n    padding: 4px 24px;\n    text-decoration: none;\n    color: #ffffff;\n    font-weight: lighter;\n    background-color: #5b6368;\n\n    &.router-link-exact-active {\n      background-color: #3891a6;\n    }\n  }\n}\n</style>\n"]}]}