{"remainingRequest":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/components/ModifyContent/ContentDetails/Terminology/Term/Term.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/src/components/ModifyContent/ContentDetails/Terminology/Term/Term.vue","mtime":1641025895502},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/cache-loader/dist/cjs.js","mtime":1640582283784},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/babel-loader/lib/index.js","mtime":1640582283745},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/cache-loader/dist/cjs.js","mtime":1640582283784},{"path":"/Users/engram/Documents/Web_apps/ap-study-bites-admin/node_modules/vue-loader/lib/index.js","mtime":1640582283219}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IHsgbWFwRmllbGRzIH0gZnJvbSAidnVleC1tYXAtZmllbGRzIjsKaW1wb3J0IGZpcmViYXNlIGZyb20gImZpcmViYXNlIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGVsRGlhbG9nOiBmYWxzZSwKICAgICAgc2F2ZURpYWxvZzogZmFsc2UsCiAgICAgIGltYWdlOiBudWxsLAogICAgICBpbWFnZURhdGE6IG51bGwsCiAgICB9OwogIH0sCiAgbmFtZTogIlRlcm0iLAogIHByb3BzOiBbInRvcGljVGVybSJdLAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBGaWVsZHMoInRlcm1pbm9sb2d5IiwgWwogICAgICAiY3VycmVudFRlcm0udGVybSIsCiAgICAgICJjdXJyZW50VGVybS5kZWYiLAogICAgICAiY3VycmVudFRlcm0udGh1bWJVUkwiLAogICAgICAiY3VycmVudFRlcm0udGh1bWJGaWxlIiwKICAgIF0pLAogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwQWN0aW9ucygidGVybWlub2xvZ3kiLCBbCiAgICAgICJlZGl0VGVybSIsCiAgICAgICJkZWxldGVUZXJtIiwKICAgICAgImZldGNoVGVybXMiLAogICAgICAic3VibWl0RWRpdFRlcm0iLAogICAgICAiY2xlYXJGaWVsZHMiLAogICAgICAiY2xlYXJUZXJtSWQiLAogICAgXSksCiAgICBwcmV2aWV3SW1hZ2UoZSkgewogICAgICB0aGlzLnVwbG9hZFZhbHVlID0gMDsKICAgICAgY29uc29sZS5sb2coZS50YXJnZXQuZmlsZXNbMF0pOwogICAgICBsZXQgZmlsZSA9IGUudGFyZ2V0LmZpbGVzWzBdOwogICAgICBsZXQgZmlsZVNpemUgPSBmaWxlLnNpemUgLyAxMDI0IC8gMTAyNDsKICAgICAgaWYgKGZpbGVTaXplID4gMikgewogICAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgICBhbGVydCgiRmlsZSBpcyBvdmVyIDJtYiIpOwogICAgICAgIHRoaXMudGh1bWJGaWxlID0gIiI7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy50aHVtYlVSTCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSk7CiAgICAgICAgdGhpcy5pbWFnZURhdGEgPSBlLnRhcmdldC5maWxlc1swXTsKICAgICAgICB0aGlzLnRodW1iRmlsZSA9IGZpbGUubmFtZTsKICAgICAgfQogICAgfSwKICAgIG9uVXBsb2FkKCkgewogICAgICBjb25zdCBzdG9yYWdlUmVmID0gZmlyZWJhc2UKICAgICAgICAuc3RvcmFnZSgpCiAgICAgICAgLnJlZihgJHt0aGlzLmltYWdlRGF0YS5uYW1lfWApCiAgICAgICAgLnB1dCh0aGlzLmltYWdlRGF0YSk7CiAgICAgIHN0b3JhZ2VSZWYub24oCiAgICAgICAgYHN0YXRlX2NoYW5nZWRgLAogICAgICAgIChzbmFwc2hvdCkgPT4gewogICAgICAgICAgdGhpcy51cGxvYWRWYWx1ZSA9CiAgICAgICAgICAgIChzbmFwc2hvdC5ieXRlc1RyYW5zZmVycmVkIC8gc25hcHNob3QudG90YWxCeXRlcykgKiAxMDA7CiAgICAgICAgfSwKICAgICAgICAoZXJyb3IpID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yLm1lc3NhZ2UpOwogICAgICAgIH0sCiAgICAgICAgKCkgPT4gewogICAgICAgICAgdGhpcy51cGxvYWRWYWx1ZSA9IDEwMDsKICAgICAgICAgIHN0b3JhZ2VSZWYuc25hcHNob3QucmVmLmdldERvd25sb2FkVVJMKCkudGhlbigodXJsKSA9PiB7CiAgICAgICAgICAgIC8vIHRoaXMuaW1nMSA9IHVybDsKICAgICAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5pbWcxKTsKICAgICAgICAgICAgdGhpcy50aHVtYlVSTCA9IHVybDsKICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy50aHVtYlVSTCk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgICk7CiAgICB9LAogICAgYXN5bmMgc3VibWl0VGVybUhhbmRsZXIoKSB7CiAgICAgIGlmICh0aGlzLmltYWdlRGF0YSkgewogICAgICAgIGxldCBpbWdQcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKHRoaXMub25VcGxvYWQoKSk7CiAgICAgICAgYXdhaXQgaW1nUHJvbWlzZS50aGVuKGFzeW5jICgpID0+IHsKICAgICAgICAgIHNldFRpbWVvdXQoYXN5bmMgKCkgPT4gewogICAgICAgICAgICBhd2FpdCB0aGlzLnN1Ym1pdEVkaXRUZXJtKCk7CiAgICAgICAgICB9LCAyMDAwKTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnRodW1iRmlsZSA9ICJwbGFjZUhvbGRlckltZy5wbmciOwogICAgICAgIHRoaXMudGh1bWJVUkwgPQogICAgICAgICAgImh0dHBzOi8vZmlyZWJhc2VzdG9yYWdlLmdvb2dsZWFwaXMuY29tL3YwL2Ivc3R1ZHktYml0ZXMtMS5hcHBzcG90LmNvbS9vL3BsYWNlSG9sZGVySW1nLnBuZz9hbHQ9bWVkaWEmdG9rZW49MzhlY2VkMDctNTRhNC00YjNhLWIyZjktNDlmYThlMDFkYTYzIjsKICAgICAgICBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHsKICAgICAgICAgIGF3YWl0IHRoaXMuc3VibWl0RWRpdFRlcm0oKTsKICAgICAgICB9LCAyMDAwKTsKICAgICAgfQogICAgICB0aGlzLnNhdmVEaWFsb2cgPSBmYWxzZTsKICAgICAgdGhpcy51cmwgPSBudWxsOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZm9ybSIpLnJlc2V0KCk7CiAgICAgIGNvbnNvbGUubG9nKCJTdWJtaXR0ZWQgRWRpdCIpOwogICAgfSwKICAgIGRlbGV0ZVRlcm1IYW5kbGVyKHRvcGljVGVybSkgewogICAgICB0aGlzLmRlbGV0ZVRlcm0odG9waWNUZXJtKTsKICAgICAgdGhpcy5kZWxEaWFsb2cgPSBmYWxzZTsKICAgICAgY29uc29sZS5sb2coIkRlbGV0ZWQiICsgdG9waWNUZXJtLnRlcm0pOwogICAgfSwKICAgIGNhbmNlbEhhbmRsZXIoKSB7CiAgICAgIHRoaXMuY2xlYXJGaWVsZHMoKTsKICAgICAgdGhpcy5jbGVhclRlcm1JZCgpOwogICAgICB0aGlzLnNhdmVEaWFsb2cgPSBmYWxzZTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["Term.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Term.vue","sourceRoot":"src/components/ModifyContent/ContentDetails/Terminology/Term","sourcesContent":["<template>\n  <div class=\"d-flex pt-4 justify-center align-center\">\n    <v-card\n      class=\"d-flex\"\n      width=\"580px\"\n      height=\"auto\"\n      outlined\n      style=\"border: 1px solid #979797\"\n    >\n      <v-card class=\"d-flex ma-1\" width=\"160px\" height=\"160px\" outlined tile>\n        <v-img :src=\"topicTerm.thumbURL\"> </v-img>\n      </v-card>\n      <div class=\"d-flex flex-column\" style=\"position: absolute; right: 0px\">\n        <div>\n          <!-- Modal when editing a term -->\n          <v-dialog v-model=\"saveDialog\" persistent max-width=\"500\">\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-btn\n                color=\"#3891A6\"\n                v-bind=\"attrs\"\n                v-on=\"on\"\n                @click=\"\n                  editTerm(topicTerm), (this.thumbURL = topicTerm.thumbURL)\n                \"\n                icon\n                small\n              >\n                <v-icon>\n                  create\n                </v-icon>\n              </v-btn>\n            </template>\n            <v-card>\n              <v-card-title class=\"headline d-flex justify-center\">\n                <div class=\"mt-4\">Editing a term</div>\n              </v-card-title>\n              <v-row class=\"d-flex justify-center pt-10 px-15\">\n                <v-col>\n                  <v-text-field\n                    label=\"Term:\"\n                    background-color=\"grey lighten-2\"\n                    v-model=\"term\"\n                    outlined\n                    dense\n                  ></v-text-field>\n                  <v-textarea\n                    v-model=\"def\"\n                    outlined\n                    name=\"input-7-4\"\n                    label=\"Definition:\"\n                    background-color=\"grey lighten-2\"\n                    height=\"7vw\"\n                  ></v-textarea>\n                </v-col>\n              </v-row>\n              <!-- IMG PREVIEW -->\n              <v-row class=\"d-flex justify-center px-15 pb-10\">\n                <div class=\"d-flex\">\n                  <v-card\n                    class=\"d-block\"\n                    height=\"80px\"\n                    width=\"10vw\"\n                    color=\"grey lighten-2\"\n                  >\n                    <v-img\n                      v-if=\"thumbURL\"\n                      :src=\"thumbURL\"\n                      height=\"80px\"\n                      width=\"10vw\"\n                    ></v-img>\n                  </v-card>\n                  <div style=\"width: 17vw\">\n                    <form id=\"form\">\n                      <input\n                        class=\"pl-4\"\n                        ref=\"input1\"\n                        type=\"file\"\n                        @change=\"previewImage\"\n                      />\n                    </form>\n                  </div>\n                </div>\n              </v-row>\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn text @click=\"cancelHandler\"> Cancel </v-btn>\n\n                <!-- Final confirmation on saving edited term -->\n                <v-btn color=\"#3891A6\" text @click=\"submitTermHandler\">\n                  Save\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n          <!-- Modal when deleting a term -->\n          <v-dialog v-model=\"delDialog\" persistent max-width=\"250\">\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-btn color=\"#3891A6\" v-bind=\"attrs\" v-on=\"on\" icon small>\n                <v-icon>\n                  disabled_by_default\n                </v-icon>\n              </v-btn>\n            </template>\n            <v-card>\n              <v-card-title class=\"headline\">\n                <div>Are you sure you want to delete this term?</div>\n              </v-card-title>\n              <v-card-text\n                >Once the term is deleted you can never retrieve it</v-card-text\n              >\n              <v-card-actions>\n                <v-spacer></v-spacer>\n                <v-btn text @click=\"delDialog = false\"> Cancel </v-btn>\n\n                <!-- Final confirmation on deleting term -->\n                <v-btn\n                  color=\"red darken-1\"\n                  text\n                  @click=\"deleteTermHandler(topicTerm)\"\n                >\n                  Yes, delete\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </v-dialog>\n        </div>\n      </div>\n      <div class=\"d-flex flex-column pt-6 pl-4 pr-2\">\n        <div class=\"text-left text-h6 font-weight-medium\">\n          {{ topicTerm.term }}\n        </div>\n        <div class=\"text-left subtitle-1 py-2\" style=\"line-height: 20px\">\n          {{ topicTerm.def }}\n        </div>\n      </div>\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\nimport { mapFields } from \"vuex-map-fields\";\nimport firebase from \"firebase\";\n\nexport default {\n  data() {\n    return {\n      delDialog: false,\n      saveDialog: false,\n      image: null,\n      imageData: null,\n    };\n  },\n  name: \"Term\",\n  props: [\"topicTerm\"],\n  computed: {\n    ...mapFields(\"terminology\", [\n      \"currentTerm.term\",\n      \"currentTerm.def\",\n      \"currentTerm.thumbURL\",\n      \"currentTerm.thumbFile\",\n    ]),\n  },\n  methods: {\n    ...mapActions(\"terminology\", [\n      \"editTerm\",\n      \"deleteTerm\",\n      \"fetchTerms\",\n      \"submitEditTerm\",\n      \"clearFields\",\n      \"clearTermId\",\n    ]),\n    previewImage(e) {\n      this.uploadValue = 0;\n      console.log(e.target.files[0]);\n      let file = e.target.files[0];\n      let fileSize = file.size / 1024 / 1024;\n      if (fileSize > 2) {\n        e.preventDefault();\n        alert(\"File is over 2mb\");\n        this.thumbFile = \"\";\n      } else {\n        this.thumbURL = URL.createObjectURL(file);\n        this.imageData = e.target.files[0];\n        this.thumbFile = file.name;\n      }\n    },\n    onUpload() {\n      const storageRef = firebase\n        .storage()\n        .ref(`${this.imageData.name}`)\n        .put(this.imageData);\n      storageRef.on(\n        `state_changed`,\n        (snapshot) => {\n          this.uploadValue =\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        },\n        (error) => {\n          console.log(error.message);\n        },\n        () => {\n          this.uploadValue = 100;\n          storageRef.snapshot.ref.getDownloadURL().then((url) => {\n            // this.img1 = url;\n            // console.log(this.img1);\n            this.thumbURL = url;\n            console.log(this.thumbURL);\n          });\n        }\n      );\n    },\n    async submitTermHandler() {\n      if (this.imageData) {\n        let imgPromise = Promise.resolve(this.onUpload());\n        await imgPromise.then(async () => {\n          setTimeout(async () => {\n            await this.submitEditTerm();\n          }, 2000);\n        });\n      } else {\n        this.thumbFile = \"placeHolderImg.png\";\n        this.thumbURL =\n          \"https://firebasestorage.googleapis.com/v0/b/study-bites-1.appspot.com/o/placeHolderImg.png?alt=media&token=38eced07-54a4-4b3a-b2f9-49fa8e01da63\";\n        setTimeout(async () => {\n          await this.submitEditTerm();\n        }, 2000);\n      }\n      this.saveDialog = false;\n      this.url = null;\n      document.getElementById(\"form\").reset();\n      console.log(\"Submitted Edit\");\n    },\n    deleteTermHandler(topicTerm) {\n      this.deleteTerm(topicTerm);\n      this.delDialog = false;\n      console.log(\"Deleted\" + topicTerm.term);\n    },\n    cancelHandler() {\n      this.clearFields();\n      this.clearTermId();\n      this.saveDialog = false;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"]}]}