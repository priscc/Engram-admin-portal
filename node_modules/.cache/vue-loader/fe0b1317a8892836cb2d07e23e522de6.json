{"remainingRequest":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/src/components/ModifyContent/ContentDetails/HistoricalPeople/Forms/Resources/Article/Article.vue?vue&type=template&id=42df4dda&scoped=true&","dependencies":[{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/src/components/ModifyContent/ContentDetails/HistoricalPeople/Forms/Resources/Article/Article.vue","mtime":1618025891389},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/cache-loader/dist/cjs.js","mtime":1618025539709},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1619065981447},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/cache-loader/dist/cjs.js","mtime":1618025539709},{"path":"/Users/priscilla_cancar/Documents/VueProjects/StudyBites/studybites_AdminPortal/node_modules/vue-loader/lib/index.js","mtime":1619065981447}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImQtZmxleCBwdC00IGp1c3RpZnktY2VudGVyIGFsaWduLWNlbnRlciI+CiAgPHYtY2FyZAogICAgY2xhc3M9ImQtZmxleCIKICAgIHdpZHRoPSIzMTlweCIKICAgIGhlaWdodD0iNDdweCIKICAgIG91dGxpbmVkCiAgICBzdHlsZT0iYm9yZGVyOiAxcHggc29saWQgIzk3OTc5NyIKICA+CiAgICA8ZGl2IGNsYXNzPSJkLWZsZXggZmxleC1jb2x1bW4iIHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IHJpZ2h0OiAwcHgiPgogICAgICA8ZGl2IGlkPSJjYXJkYnRuMSI+CiAgICAgICAgPCEtLSBNb2RhbCB3aGVuIGVkaXRpbmcgYW4gYXJ0aWNsZSAtLT4KICAgICAgICA8di1kaWFsb2cgdi1tb2RlbD0iZWRpdERpYWxvZyIgcGVyc2lzdGVudCBtYXgtd2lkdGg9IjUwMCI+CiAgICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmFjdGl2YXRvcj0ieyBvbiwgYXR0cnMgfSI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJtYXRlcmlhbC1pY29ucyI+CiAgICAgICAgICAgICAgPHYtaWNvbgogICAgICAgICAgICAgICAgY2xhc3M9ImQtZmxleCIKICAgICAgICAgICAgICAgIHNpemU9IjIwIgogICAgICAgICAgICAgICAgY29sb3I9IiMzODkxQTYiCiAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyIgogICAgICAgICAgICAgICAgQGNsaWNrPSJlZGl0QXJ0aWNsZShhcnRpY2xlKSIKICAgICAgICAgICAgICAgIHYtYmluZD0iYXR0cnMiCiAgICAgICAgICAgICAgICB2LW9uPSJvbiIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICBjcmVhdGUKICAgICAgICAgICAgICA8L3YtaWNvbj4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDx2LWNhcmQ+CiAgICAgICAgICAgIDx2LWNhcmQtdGl0bGUgY2xhc3M9ImhlYWRsaW5lIGQtZmxleCBqdXN0aWZ5LWNlbnRlciI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXQtNCI+CiAgICAgICAgICAgICAgICBFZGl0aW5nIGFuIEFydGljbGUKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC92LWNhcmQtdGl0bGU+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBqdXN0aWZ5LWNlbnRlciI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIGQtZmxleCBwbC04Ij4KICAgICAgICAgICAgICAgIDx2LWZvcm0gcmVmPSJmb3JtIiBsYXp5LXZhbGlkYXRpb24+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCI+CiAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InB4LTIiCiAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJuZXdzU291cmNlIgogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9Ik5ld3MgU291cmNlIgogICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQKICAgICAgICAgICAgICAgICAgICAgIGRlbnNlCiAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJweC0yIgogICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0icHVibGlzaGVkIgogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlB1Ymxpc2ggRGF0ZSIKICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkCiAgICAgICAgICAgICAgICAgICAgICBkZW5zZQogICAgICAgICAgICAgICAgICAgID48L3YtdGV4dC1maWVsZD4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im10LW40IiBzdHlsZT0id2lkdGg6IDE1NXB4Ij4KICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0icHgtMiIKICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InRpdGxlIgogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkFydGljbGUgVGl0bGUiCiAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZAogICAgICAgICAgICAgICAgICAgICAgZGVuc2UKICAgICAgICAgICAgICAgICAgICA+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDx2LXRleHQtZmllbGQKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJweC0yIgogICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic3VtbWFyeSIKICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJTdW1tYXJ5IgogICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcj0iZ3JleSBsaWdodGVuLTIiCiAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZAogICAgICAgICAgICAgICAgICAgICAgZGVuc2UKICAgICAgICAgICAgICAgICAgICAgIG91dGxpbmVkCiAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IG10LW4yIHBsLTIiPgogICAgICAgICAgICAgICAgICAgIDx2LWNhcmQKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJkLWJsb2NrIgogICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjZ2dyIKICAgICAgICAgICAgICAgICAgICAgIGhlaWdodD0iNHZ3IgogICAgICAgICAgICAgICAgICAgICAgY29sb3I9ImdyZXkgbGlnaHRlbi0yIgogICAgICAgICAgICAgICAgICAgICAgb3V0bGluZWQKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8di1pbWcgOnNyYz0idXJsIj48L3YtaW1nPgogICAgICAgICAgICAgICAgICAgIDwvdi1jYXJkPgoKICAgICAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJ3aWR0aDogMTN2dyI+CiAgICAgICAgICAgICAgICAgICAgICA8di1maWxlLWlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJwdC02IG1sLW40IgogICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJpbWFnZSIKICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXB0PSJpbWFnZS8qIgogICAgICAgICAgICAgICAgICAgICAgICBwcmVwZW5kLWljb249Im5vbmUiCiAgICAgICAgICAgICAgICAgICAgICAgIGFwcGVuZC1pY29uPSJhdHRhY2hfZmlsZSIKICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkFydGljbGUgVGh1bWJuYWlsIgogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPC92LWZpbGUtaW5wdXQ+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtdC1uNCIgc3R5bGU9IndpZHRoOiAxNTVweCI+CiAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZAogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InB4LTIiCiAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJ1cmwiCiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iQXJ0aWNsZSBMaW5rIgogICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQKICAgICAgICAgICAgICAgICAgICAgIGRlbnNlCiAgICAgICAgICAgICAgICAgICAgPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvdi1mb3JtPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPHYtY2FyZC1hY3Rpb25zPgogICAgICAgICAgICAgIDx2LXNwYWNlcj48L3Ytc3BhY2VyPgogICAgICAgICAgICAgIDx2LWJ0biB0ZXh0IEBjbGljaz0iY2FuY2VsSGFuZGxlciI+CiAgICAgICAgICAgICAgICBDYW5jZWwKICAgICAgICAgICAgICA8L3YtYnRuPgoKICAgICAgICAgICAgICA8IS0tIEZpbmFsIGNvbmZpcm1hdGlvbiBvbiBzYXZpbmcgZWRpdGVkIGFydGljbGUgLS0+CiAgICAgICAgICAgICAgPHYtYnRuIGNvbG9yPSIjMzg5MUE2IiB0ZXh0IEBjbGljaz0ic3VibWl0RWRpdEFydGljbGVIYW5kbGVyIj4KICAgICAgICAgICAgICAgIFNhdmUKICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICA8L3YtY2FyZC1hY3Rpb25zPgogICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgPC92LWRpYWxvZz4KICAgICAgICA8IS0tIE1vZGFsICAtLT4KICAgICAgIAogICAgICAgICA8IS0tIE1vZGFsIHdoZW4gZGVsZXRpbmcgYW4gYXJ0aWNsZSAtLT4KICAgICAgICA8di1kaWFsb2cgdi1tb2RlbD0iZGVsRGlhbG9nIiBwZXJzaXN0ZW50IG1heC13aWR0aD0iMjUwIj4KICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YWN0aXZhdG9yPSJ7IG9uLCBhdHRycyB9Ij4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1hdGVyaWFsLWljb25zIj4KICAgICAgICAgICAgICA8di1pY29uCiAgICAgICAgICAgICAgICBjbGFzcz0iZC1mbGV4IgogICAgICAgICAgICAgICAgc2l6ZT0iMjAiCiAgICAgICAgICAgICAgICBjb2xvcj0iIzM4OTFBNiIKICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXIiCiAgICAgICAgICAgICAgICB2LWJpbmQ9ImF0dHJzIgogICAgICAgICAgICAgICAgdi1vbj0ib24iCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgZGlzYWJsZWRfYnlfZGVmYXVsdAogICAgICAgICAgICAgIDwvdi1pY29uPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgPHYtY2FyZD4KICAgICAgICAgICAgPHYtY2FyZC10aXRsZSBjbGFzcz0iaGVhZGxpbmUiPgogICAgICAgICAgICAgIDxkaXY+QXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRlbGV0ZSB7eyBhcnRpY2xlLnRpdGxlIH19PzwvZGl2PgogICAgICAgICAgICA8L3YtY2FyZC10aXRsZT4KICAgICAgICAgICAgPHYtY2FyZC10ZXh0CiAgICAgICAgICAgICAgPk9uY2Uge3sgYXJ0aWNsZS50aXRsZSB9fSBpcyBkZWxldGVkIHlvdSBjYW4gbmV2ZXIgcmV0cmlldmUKICAgICAgICAgICAgICBpdDwvdi1jYXJkLXRleHQKICAgICAgICAgICAgPgogICAgICAgICAgICA8di1jYXJkLWFjdGlvbnM+CiAgICAgICAgICAgICAgPHYtc3BhY2VyPjwvdi1zcGFjZXI+CiAgICAgICAgICAgICAgPHYtYnRuIHRleHQgQGNsaWNrPSJkZWxEaWFsb2cgPSBmYWxzZSI+CiAgICAgICAgICAgICAgICBDYW5jZWwKICAgICAgICAgICAgICA8L3YtYnRuPgoKICAgICAgICAgICAgICA8IS0tIEZpbmFsIGNvbmZpcm1hdGlvbiBvbiBkZWxldGluZyBhcnRpY2xlIC0tPgogICAgICAgICAgICAgIDx2LWJ0bgogICAgICAgICAgICAgICAgY29sb3I9InJlZCBkYXJrZW4tMSIKICAgICAgICAgICAgICAgIHRleHQKICAgICAgICAgICAgICAgIEBjbGljaz0iZGVsZXRlQXJ0aWNsZUhhbmRsZXIoYXJ0aWNsZSkiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgWWVzLCBkZWxldGUKICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICA8L3YtY2FyZC1hY3Rpb25zPgogICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgPC92LWRpYWxvZz4KICAgICAgICA8IS0tIE1vZGFsICAtLT4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImZvbnQtd2VpZ2h0LXJlZ3VsYXIgZC1mbGV4IGZsZXgtY29sdW1uIGZsZXgtc3RhcnQgcHQtMiBwbC00Ij4KICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IiBzdHlsZT0iZm9udC1zaXplOiAxNHB4Ij4KICAgICAgICBBcnRpY2xlIFRpdGxlOiB7e2FydGljbGUudGl0bGV9fQogICAgICA8L2Rpdj4KICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCIgc3R5bGU9ImZvbnQtc2l6ZTogMTBweCI+CiAgICAgICAge3thcnRpY2xlLnVybH19CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC92LWNhcmQ+CjwvZGl2Pgo="},null]}